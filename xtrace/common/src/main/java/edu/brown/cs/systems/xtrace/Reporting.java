// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/reporting.proto

package edu.brown.cs.systems.xtrace;

public final class Reporting {
  private Reporting() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface XTraceReportv4OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sfixed64 task_id = 1;
    /**
     * <code>optional sfixed64 task_id = 1;</code>
     *
     * <pre>
     * X-Trace related fields
     * </pre>
     */
    boolean hasTaskId();
    /**
     * <code>optional sfixed64 task_id = 1;</code>
     *
     * <pre>
     * X-Trace related fields
     * </pre>
     */
    long getTaskId();

    // optional sfixed64 event_id = 2;
    /**
     * <code>optional sfixed64 event_id = 2;</code>
     *
     * <pre>
     * ID of this report
     * </pre>
     */
    boolean hasEventId();
    /**
     * <code>optional sfixed64 event_id = 2;</code>
     *
     * <pre>
     * ID of this report
     * </pre>
     */
    long getEventId();

    // repeated sfixed64 parent_event_id = 3;
    /**
     * <code>repeated sfixed64 parent_event_id = 3;</code>
     *
     * <pre>
     * ID of causally-preceding reports
     * </pre>
     */
    java.util.List<java.lang.Long> getParentEventIdList();
    /**
     * <code>repeated sfixed64 parent_event_id = 3;</code>
     *
     * <pre>
     * ID of causally-preceding reports
     * </pre>
     */
    int getParentEventIdCount();
    /**
     * <code>repeated sfixed64 parent_event_id = 3;</code>
     *
     * <pre>
     * ID of causally-preceding reports
     * </pre>
     */
    long getParentEventId(int index);

    // optional int64 timestamp = 4;
    /**
     * <code>optional int64 timestamp = 4;</code>
     *
     * <pre>
     * Timestamp fields
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 4;</code>
     *
     * <pre>
     * Timestamp fields
     * </pre>
     */
    long getTimestamp();

    // optional int64 hrt = 5;
    /**
     * <code>optional int64 hrt = 5;</code>
     *
     * <pre>
     * Process-dependent high-resolution timer in nanoseconds
     * </pre>
     */
    boolean hasHrt();
    /**
     * <code>optional int64 hrt = 5;</code>
     *
     * <pre>
     * Process-dependent high-resolution timer in nanoseconds
     * </pre>
     */
    long getHrt();

    // optional int64 cycles = 6;
    /**
     * <code>optional int64 cycles = 6;</code>
     *
     * <pre>
     * Thread-dependent CPU cycle timer
     * </pre>
     */
    boolean hasCycles();
    /**
     * <code>optional int64 cycles = 6;</code>
     *
     * <pre>
     * Thread-dependent CPU cycle timer
     * </pre>
     */
    long getCycles();

    // optional string host = 7;
    /**
     * <code>optional string host = 7;</code>
     *
     * <pre>
     * Report source fields
     * </pre>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 7;</code>
     *
     * <pre>
     * Report source fields
     * </pre>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 7;</code>
     *
     * <pre>
     * Report source fields
     * </pre>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional int32 process_id = 8;
    /**
     * <code>optional int32 process_id = 8;</code>
     *
     * <pre>
     * Numeric process ID
     * </pre>
     */
    boolean hasProcessId();
    /**
     * <code>optional int32 process_id = 8;</code>
     *
     * <pre>
     * Numeric process ID
     * </pre>
     */
    int getProcessId();

    // optional string process_name = 9;
    /**
     * <code>optional string process_name = 9;</code>
     *
     * <pre>
     * Process name
     * </pre>
     */
    boolean hasProcessName();
    /**
     * <code>optional string process_name = 9;</code>
     *
     * <pre>
     * Process name
     * </pre>
     */
    java.lang.String getProcessName();
    /**
     * <code>optional string process_name = 9;</code>
     *
     * <pre>
     * Process name
     * </pre>
     */
    com.google.protobuf.ByteString
        getProcessNameBytes();

    // optional int32 thread_id = 10;
    /**
     * <code>optional int32 thread_id = 10;</code>
     *
     * <pre>
     * Numeric thread ID
     * </pre>
     */
    boolean hasThreadId();
    /**
     * <code>optional int32 thread_id = 10;</code>
     *
     * <pre>
     * Numeric thread ID
     * </pre>
     */
    int getThreadId();

    // optional string threadName = 11;
    /**
     * <code>optional string threadName = 11;</code>
     *
     * <pre>
     * Thread name
     * </pre>
     */
    boolean hasThreadName();
    /**
     * <code>optional string threadName = 11;</code>
     *
     * <pre>
     * Thread name
     * </pre>
     */
    java.lang.String getThreadName();
    /**
     * <code>optional string threadName = 11;</code>
     *
     * <pre>
     * Thread name
     * </pre>
     */
    com.google.protobuf.ByteString
        getThreadNameBytes();

    // optional string agent = 12;
    /**
     * <code>optional string agent = 12;</code>
     *
     * <pre>
     * An arbitrary string, usually a java class, where this report was generated
     * </pre>
     */
    boolean hasAgent();
    /**
     * <code>optional string agent = 12;</code>
     *
     * <pre>
     * An arbitrary string, usually a java class, where this report was generated
     * </pre>
     */
    java.lang.String getAgent();
    /**
     * <code>optional string agent = 12;</code>
     *
     * <pre>
     * An arbitrary string, usually a java class, where this report was generated
     * </pre>
     */
    com.google.protobuf.ByteString
        getAgentBytes();

    // optional string source = 13;
    /**
     * <code>optional string source = 13;</code>
     *
     * <pre>
     * The source code location where this report was generated
     * </pre>
     */
    boolean hasSource();
    /**
     * <code>optional string source = 13;</code>
     *
     * <pre>
     * The source code location where this report was generated
     * </pre>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 13;</code>
     *
     * <pre>
     * The source code location where this report was generated
     * </pre>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    // optional string label = 14;
    /**
     * <code>optional string label = 14;</code>
     *
     * <pre>
     * Messages
     * </pre>
     */
    boolean hasLabel();
    /**
     * <code>optional string label = 14;</code>
     *
     * <pre>
     * Messages
     * </pre>
     */
    java.lang.String getLabel();
    /**
     * <code>optional string label = 14;</code>
     *
     * <pre>
     * Messages
     * </pre>
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    // repeated string key = 15;
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    java.util.List<java.lang.String>
    getKeyList();
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    int getKeyCount();
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    java.lang.String getKey(int index);
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes(int index);

    // repeated string value = 16;
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    java.util.List<java.lang.String>
    getValueList();
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    int getValueCount();
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    java.lang.String getValue(int index);
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);

    // repeated string tags = 17;
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    java.util.List<java.lang.String>
    getTagsList();
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    int getTagsCount();
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    java.lang.String getTags(int index);
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    // optional int32 tenantClass = 18;
    /**
     * <code>optional int32 tenantClass = 18;</code>
     *
     * <pre>
     * X-Trace Tenant field
     * </pre>
     */
    boolean hasTenantClass();
    /**
     * <code>optional int32 tenantClass = 18;</code>
     *
     * <pre>
     * X-Trace Tenant field
     * </pre>
     */
    int getTenantClass();
  }
  /**
   * Protobuf type {@code pubsub.XTraceReportv4}
   *
   * <pre>
   * The report specification for X-Trace version 4.
   * </pre>
   */
  public static final class XTraceReportv4 extends
      com.google.protobuf.GeneratedMessage
      implements XTraceReportv4OrBuilder {
    // Use XTraceReportv4.newBuilder() to construct.
    private XTraceReportv4(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private XTraceReportv4(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final XTraceReportv4 defaultInstance;
    public static XTraceReportv4 getDefaultInstance() {
      return defaultInstance;
    }

    public XTraceReportv4 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private XTraceReportv4(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              taskId_ = input.readSFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              eventId_ = input.readSFixed64();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                parentEventId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              parentEventId_.add(input.readSFixed64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                parentEventId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                parentEventId_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              hrt_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              cycles_ = input.readInt64();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              host_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              processId_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000080;
              processName_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              threadId_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000200;
              threadName_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              agent_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000800;
              source_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00001000;
              label_ = input.readBytes();
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                key_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00004000;
              }
              key_.add(input.readBytes());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00008000;
              }
              value_.add(input.readBytes());
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00010000;
              }
              tags_.add(input.readBytes());
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              tenantClass_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          parentEventId_ = java.util.Collections.unmodifiableList(parentEventId_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          key_ = new com.google.protobuf.UnmodifiableLazyStringList(key_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          value_ = new com.google.protobuf.UnmodifiableLazyStringList(value_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          tags_ = new com.google.protobuf.UnmodifiableLazyStringList(tags_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.xtrace.Reporting.internal_static_pubsub_XTraceReportv4_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.xtrace.Reporting.internal_static_pubsub_XTraceReportv4_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.class, edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.Builder.class);
    }

    public static com.google.protobuf.Parser<XTraceReportv4> PARSER =
        new com.google.protobuf.AbstractParser<XTraceReportv4>() {
      public XTraceReportv4 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new XTraceReportv4(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<XTraceReportv4> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sfixed64 task_id = 1;
    public static final int TASK_ID_FIELD_NUMBER = 1;
    private long taskId_;
    /**
     * <code>optional sfixed64 task_id = 1;</code>
     *
     * <pre>
     * X-Trace related fields
     * </pre>
     */
    public boolean hasTaskId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sfixed64 task_id = 1;</code>
     *
     * <pre>
     * X-Trace related fields
     * </pre>
     */
    public long getTaskId() {
      return taskId_;
    }

    // optional sfixed64 event_id = 2;
    public static final int EVENT_ID_FIELD_NUMBER = 2;
    private long eventId_;
    /**
     * <code>optional sfixed64 event_id = 2;</code>
     *
     * <pre>
     * ID of this report
     * </pre>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sfixed64 event_id = 2;</code>
     *
     * <pre>
     * ID of this report
     * </pre>
     */
    public long getEventId() {
      return eventId_;
    }

    // repeated sfixed64 parent_event_id = 3;
    public static final int PARENT_EVENT_ID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> parentEventId_;
    /**
     * <code>repeated sfixed64 parent_event_id = 3;</code>
     *
     * <pre>
     * ID of causally-preceding reports
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getParentEventIdList() {
      return parentEventId_;
    }
    /**
     * <code>repeated sfixed64 parent_event_id = 3;</code>
     *
     * <pre>
     * ID of causally-preceding reports
     * </pre>
     */
    public int getParentEventIdCount() {
      return parentEventId_.size();
    }
    /**
     * <code>repeated sfixed64 parent_event_id = 3;</code>
     *
     * <pre>
     * ID of causally-preceding reports
     * </pre>
     */
    public long getParentEventId(int index) {
      return parentEventId_.get(index);
    }

    // optional int64 timestamp = 4;
    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 4;</code>
     *
     * <pre>
     * Timestamp fields
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 timestamp = 4;</code>
     *
     * <pre>
     * Timestamp fields
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // optional int64 hrt = 5;
    public static final int HRT_FIELD_NUMBER = 5;
    private long hrt_;
    /**
     * <code>optional int64 hrt = 5;</code>
     *
     * <pre>
     * Process-dependent high-resolution timer in nanoseconds
     * </pre>
     */
    public boolean hasHrt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 hrt = 5;</code>
     *
     * <pre>
     * Process-dependent high-resolution timer in nanoseconds
     * </pre>
     */
    public long getHrt() {
      return hrt_;
    }

    // optional int64 cycles = 6;
    public static final int CYCLES_FIELD_NUMBER = 6;
    private long cycles_;
    /**
     * <code>optional int64 cycles = 6;</code>
     *
     * <pre>
     * Thread-dependent CPU cycle timer
     * </pre>
     */
    public boolean hasCycles() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 cycles = 6;</code>
     *
     * <pre>
     * Thread-dependent CPU cycle timer
     * </pre>
     */
    public long getCycles() {
      return cycles_;
    }

    // optional string host = 7;
    public static final int HOST_FIELD_NUMBER = 7;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 7;</code>
     *
     * <pre>
     * Report source fields
     * </pre>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string host = 7;</code>
     *
     * <pre>
     * Report source fields
     * </pre>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 7;</code>
     *
     * <pre>
     * Report source fields
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 process_id = 8;
    public static final int PROCESS_ID_FIELD_NUMBER = 8;
    private int processId_;
    /**
     * <code>optional int32 process_id = 8;</code>
     *
     * <pre>
     * Numeric process ID
     * </pre>
     */
    public boolean hasProcessId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 process_id = 8;</code>
     *
     * <pre>
     * Numeric process ID
     * </pre>
     */
    public int getProcessId() {
      return processId_;
    }

    // optional string process_name = 9;
    public static final int PROCESS_NAME_FIELD_NUMBER = 9;
    private java.lang.Object processName_;
    /**
     * <code>optional string process_name = 9;</code>
     *
     * <pre>
     * Process name
     * </pre>
     */
    public boolean hasProcessName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string process_name = 9;</code>
     *
     * <pre>
     * Process name
     * </pre>
     */
    public java.lang.String getProcessName() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          processName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string process_name = 9;</code>
     *
     * <pre>
     * Process name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProcessNameBytes() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 thread_id = 10;
    public static final int THREAD_ID_FIELD_NUMBER = 10;
    private int threadId_;
    /**
     * <code>optional int32 thread_id = 10;</code>
     *
     * <pre>
     * Numeric thread ID
     * </pre>
     */
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 thread_id = 10;</code>
     *
     * <pre>
     * Numeric thread ID
     * </pre>
     */
    public int getThreadId() {
      return threadId_;
    }

    // optional string threadName = 11;
    public static final int THREADNAME_FIELD_NUMBER = 11;
    private java.lang.Object threadName_;
    /**
     * <code>optional string threadName = 11;</code>
     *
     * <pre>
     * Thread name
     * </pre>
     */
    public boolean hasThreadName() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string threadName = 11;</code>
     *
     * <pre>
     * Thread name
     * </pre>
     */
    public java.lang.String getThreadName() {
      java.lang.Object ref = threadName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          threadName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string threadName = 11;</code>
     *
     * <pre>
     * Thread name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getThreadNameBytes() {
      java.lang.Object ref = threadName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        threadName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string agent = 12;
    public static final int AGENT_FIELD_NUMBER = 12;
    private java.lang.Object agent_;
    /**
     * <code>optional string agent = 12;</code>
     *
     * <pre>
     * An arbitrary string, usually a java class, where this report was generated
     * </pre>
     */
    public boolean hasAgent() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string agent = 12;</code>
     *
     * <pre>
     * An arbitrary string, usually a java class, where this report was generated
     * </pre>
     */
    public java.lang.String getAgent() {
      java.lang.Object ref = agent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          agent_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string agent = 12;</code>
     *
     * <pre>
     * An arbitrary string, usually a java class, where this report was generated
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAgentBytes() {
      java.lang.Object ref = agent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        agent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string source = 13;
    public static final int SOURCE_FIELD_NUMBER = 13;
    private java.lang.Object source_;
    /**
     * <code>optional string source = 13;</code>
     *
     * <pre>
     * The source code location where this report was generated
     * </pre>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string source = 13;</code>
     *
     * <pre>
     * The source code location where this report was generated
     * </pre>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          source_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string source = 13;</code>
     *
     * <pre>
     * The source code location where this report was generated
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string label = 14;
    public static final int LABEL_FIELD_NUMBER = 14;
    private java.lang.Object label_;
    /**
     * <code>optional string label = 14;</code>
     *
     * <pre>
     * Messages
     * </pre>
     */
    public boolean hasLabel() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string label = 14;</code>
     *
     * <pre>
     * Messages
     * </pre>
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          label_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string label = 14;</code>
     *
     * <pre>
     * Messages
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string key = 15;
    public static final int KEY_FIELD_NUMBER = 15;
    private com.google.protobuf.LazyStringList key_;
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    public java.util.List<java.lang.String>
        getKeyList() {
      return key_;
    }
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    public int getKeyCount() {
      return key_.size();
    }
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    public java.lang.String getKey(int index) {
      return key_.get(index);
    }
    /**
     * <code>repeated string key = 15;</code>
     *
     * <pre>
     * keys for custom fields; only add a key if you will also add a value
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes(int index) {
      return key_.getByteString(index);
    }

    // repeated string value = 16;
    public static final int VALUE_FIELD_NUMBER = 16;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    public java.util.List<java.lang.String>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated string value = 16;</code>
     *
     * <pre>
     * keys for custom values; only add a value if you also added a key
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    // repeated string tags = 17;
    public static final int TAGS_FIELD_NUMBER = 17;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    public java.util.List<java.lang.String>
        getTagsList() {
      return tags_;
    }
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <code>repeated string tags = 17;</code>
     *
     * <pre>
     * Database tags
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    // optional int32 tenantClass = 18;
    public static final int TENANTCLASS_FIELD_NUMBER = 18;
    private int tenantClass_;
    /**
     * <code>optional int32 tenantClass = 18;</code>
     *
     * <pre>
     * X-Trace Tenant field
     * </pre>
     */
    public boolean hasTenantClass() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tenantClass = 18;</code>
     *
     * <pre>
     * X-Trace Tenant field
     * </pre>
     */
    public int getTenantClass() {
      return tenantClass_;
    }

    private void initFields() {
      taskId_ = 0L;
      eventId_ = 0L;
      parentEventId_ = java.util.Collections.emptyList();
      timestamp_ = 0L;
      hrt_ = 0L;
      cycles_ = 0L;
      host_ = "";
      processId_ = 0;
      processName_ = "";
      threadId_ = 0;
      threadName_ = "";
      agent_ = "";
      source_ = "";
      label_ = "";
      key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      tenantClass_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSFixed64(1, taskId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSFixed64(2, eventId_);
      }
      for (int i = 0; i < parentEventId_.size(); i++) {
        output.writeSFixed64(3, parentEventId_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, hrt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, cycles_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getHostBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, processId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getProcessNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, threadId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getThreadNameBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getAgentBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getSourceBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(14, getLabelBytes());
      }
      for (int i = 0; i < key_.size(); i++) {
        output.writeBytes(15, key_.getByteString(i));
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeBytes(16, value_.getByteString(i));
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeBytes(17, tags_.getByteString(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(18, tenantClass_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(1, taskId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(2, eventId_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getParentEventIdList().size();
        size += dataSize;
        size += 1 * getParentEventIdList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, hrt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, cycles_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getHostBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, processId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getProcessNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, threadId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getThreadNameBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getAgentBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getSourceBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getLabelBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < key_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(key_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKeyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(value_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(tags_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getTagsList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, tenantClass_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pubsub.XTraceReportv4}
     *
     * <pre>
     * The report specification for X-Trace version 4.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.xtrace.Reporting.internal_static_pubsub_XTraceReportv4_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.xtrace.Reporting.internal_static_pubsub_XTraceReportv4_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.class, edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.Builder.class);
      }

      // Construct using edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        taskId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        parentEventId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        hrt_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        cycles_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        host_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        processId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        processName_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        threadName_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        agent_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        source_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        label_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        tenantClass_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.xtrace.Reporting.internal_static_pubsub_XTraceReportv4_descriptor;
      }

      public edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 getDefaultInstanceForType() {
        return edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.getDefaultInstance();
      }

      public edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 build() {
        edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 buildPartial() {
        edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 result = new edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.taskId_ = taskId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventId_ = eventId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          parentEventId_ = java.util.Collections.unmodifiableList(parentEventId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.parentEventId_ = parentEventId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hrt_ = hrt_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cycles_ = cycles_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.processId_ = processId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.processName_ = processName_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.threadId_ = threadId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.threadName_ = threadName_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.agent_ = agent_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.label_ = label_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          key_ = new com.google.protobuf.UnmodifiableLazyStringList(
              key_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          value_ = new com.google.protobuf.UnmodifiableLazyStringList(
              value_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.value_ = value_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          tags_ = new com.google.protobuf.UnmodifiableLazyStringList(
              tags_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.tags_ = tags_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tenantClass_ = tenantClass_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4) {
          return mergeFrom((edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 other) {
        if (other == edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4.getDefaultInstance()) return this;
        if (other.hasTaskId()) {
          setTaskId(other.getTaskId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (!other.parentEventId_.isEmpty()) {
          if (parentEventId_.isEmpty()) {
            parentEventId_ = other.parentEventId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParentEventIdIsMutable();
            parentEventId_.addAll(other.parentEventId_);
          }
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasHrt()) {
          setHrt(other.getHrt());
        }
        if (other.hasCycles()) {
          setCycles(other.getCycles());
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000040;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasProcessId()) {
          setProcessId(other.getProcessId());
        }
        if (other.hasProcessName()) {
          bitField0_ |= 0x00000100;
          processName_ = other.processName_;
          onChanged();
        }
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasThreadName()) {
          bitField0_ |= 0x00000400;
          threadName_ = other.threadName_;
          onChanged();
        }
        if (other.hasAgent()) {
          bitField0_ |= 0x00000800;
          agent_ = other.agent_;
          onChanged();
        }
        if (other.hasSource()) {
          bitField0_ |= 0x00001000;
          source_ = other.source_;
          onChanged();
        }
        if (other.hasLabel()) {
          bitField0_ |= 0x00002000;
          label_ = other.label_;
          onChanged();
        }
        if (!other.key_.isEmpty()) {
          if (key_.isEmpty()) {
            key_ = other.key_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureKeyIsMutable();
            key_.addAll(other.key_);
          }
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (other.hasTenantClass()) {
          setTenantClass(other.getTenantClass());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.xtrace.Reporting.XTraceReportv4) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sfixed64 task_id = 1;
      private long taskId_ ;
      /**
       * <code>optional sfixed64 task_id = 1;</code>
       *
       * <pre>
       * X-Trace related fields
       * </pre>
       */
      public boolean hasTaskId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sfixed64 task_id = 1;</code>
       *
       * <pre>
       * X-Trace related fields
       * </pre>
       */
      public long getTaskId() {
        return taskId_;
      }
      /**
       * <code>optional sfixed64 task_id = 1;</code>
       *
       * <pre>
       * X-Trace related fields
       * </pre>
       */
      public Builder setTaskId(long value) {
        bitField0_ |= 0x00000001;
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 task_id = 1;</code>
       *
       * <pre>
       * X-Trace related fields
       * </pre>
       */
      public Builder clearTaskId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        taskId_ = 0L;
        onChanged();
        return this;
      }

      // optional sfixed64 event_id = 2;
      private long eventId_ ;
      /**
       * <code>optional sfixed64 event_id = 2;</code>
       *
       * <pre>
       * ID of this report
       * </pre>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sfixed64 event_id = 2;</code>
       *
       * <pre>
       * ID of this report
       * </pre>
       */
      public long getEventId() {
        return eventId_;
      }
      /**
       * <code>optional sfixed64 event_id = 2;</code>
       *
       * <pre>
       * ID of this report
       * </pre>
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000002;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 event_id = 2;</code>
       *
       * <pre>
       * ID of this report
       * </pre>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      // repeated sfixed64 parent_event_id = 3;
      private java.util.List<java.lang.Long> parentEventId_ = java.util.Collections.emptyList();
      private void ensureParentEventIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          parentEventId_ = new java.util.ArrayList<java.lang.Long>(parentEventId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getParentEventIdList() {
        return java.util.Collections.unmodifiableList(parentEventId_);
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public int getParentEventIdCount() {
        return parentEventId_.size();
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public long getParentEventId(int index) {
        return parentEventId_.get(index);
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public Builder setParentEventId(
          int index, long value) {
        ensureParentEventIdIsMutable();
        parentEventId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public Builder addParentEventId(long value) {
        ensureParentEventIdIsMutable();
        parentEventId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public Builder addAllParentEventId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureParentEventIdIsMutable();
        super.addAll(values, parentEventId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 parent_event_id = 3;</code>
       *
       * <pre>
       * ID of causally-preceding reports
       * </pre>
       */
      public Builder clearParentEventId() {
        parentEventId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int64 timestamp = 4;
      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 4;</code>
       *
       * <pre>
       * Timestamp fields
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 timestamp = 4;</code>
       *
       * <pre>
       * Timestamp fields
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 4;</code>
       *
       * <pre>
       * Timestamp fields
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 4;</code>
       *
       * <pre>
       * Timestamp fields
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 hrt = 5;
      private long hrt_ ;
      /**
       * <code>optional int64 hrt = 5;</code>
       *
       * <pre>
       * Process-dependent high-resolution timer in nanoseconds
       * </pre>
       */
      public boolean hasHrt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 hrt = 5;</code>
       *
       * <pre>
       * Process-dependent high-resolution timer in nanoseconds
       * </pre>
       */
      public long getHrt() {
        return hrt_;
      }
      /**
       * <code>optional int64 hrt = 5;</code>
       *
       * <pre>
       * Process-dependent high-resolution timer in nanoseconds
       * </pre>
       */
      public Builder setHrt(long value) {
        bitField0_ |= 0x00000010;
        hrt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 hrt = 5;</code>
       *
       * <pre>
       * Process-dependent high-resolution timer in nanoseconds
       * </pre>
       */
      public Builder clearHrt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hrt_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 cycles = 6;
      private long cycles_ ;
      /**
       * <code>optional int64 cycles = 6;</code>
       *
       * <pre>
       * Thread-dependent CPU cycle timer
       * </pre>
       */
      public boolean hasCycles() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 cycles = 6;</code>
       *
       * <pre>
       * Thread-dependent CPU cycle timer
       * </pre>
       */
      public long getCycles() {
        return cycles_;
      }
      /**
       * <code>optional int64 cycles = 6;</code>
       *
       * <pre>
       * Thread-dependent CPU cycle timer
       * </pre>
       */
      public Builder setCycles(long value) {
        bitField0_ |= 0x00000020;
        cycles_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 cycles = 6;</code>
       *
       * <pre>
       * Thread-dependent CPU cycle timer
       * </pre>
       */
      public Builder clearCycles() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cycles_ = 0L;
        onChanged();
        return this;
      }

      // optional string host = 7;
      private java.lang.Object host_ = "";
      /**
       * <code>optional string host = 7;</code>
       *
       * <pre>
       * Report source fields
       * </pre>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string host = 7;</code>
       *
       * <pre>
       * Report source fields
       * </pre>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 7;</code>
       *
       * <pre>
       * Report source fields
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 7;</code>
       *
       * <pre>
       * Report source fields
       * </pre>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 7;</code>
       *
       * <pre>
       * Report source fields
       * </pre>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000040);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 7;</code>
       *
       * <pre>
       * Report source fields
       * </pre>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        host_ = value;
        onChanged();
        return this;
      }

      // optional int32 process_id = 8;
      private int processId_ ;
      /**
       * <code>optional int32 process_id = 8;</code>
       *
       * <pre>
       * Numeric process ID
       * </pre>
       */
      public boolean hasProcessId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 process_id = 8;</code>
       *
       * <pre>
       * Numeric process ID
       * </pre>
       */
      public int getProcessId() {
        return processId_;
      }
      /**
       * <code>optional int32 process_id = 8;</code>
       *
       * <pre>
       * Numeric process ID
       * </pre>
       */
      public Builder setProcessId(int value) {
        bitField0_ |= 0x00000080;
        processId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 process_id = 8;</code>
       *
       * <pre>
       * Numeric process ID
       * </pre>
       */
      public Builder clearProcessId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        processId_ = 0;
        onChanged();
        return this;
      }

      // optional string process_name = 9;
      private java.lang.Object processName_ = "";
      /**
       * <code>optional string process_name = 9;</code>
       *
       * <pre>
       * Process name
       * </pre>
       */
      public boolean hasProcessName() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string process_name = 9;</code>
       *
       * <pre>
       * Process name
       * </pre>
       */
      public java.lang.String getProcessName() {
        java.lang.Object ref = processName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          processName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string process_name = 9;</code>
       *
       * <pre>
       * Process name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProcessNameBytes() {
        java.lang.Object ref = processName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string process_name = 9;</code>
       *
       * <pre>
       * Process name
       * </pre>
       */
      public Builder setProcessName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        processName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string process_name = 9;</code>
       *
       * <pre>
       * Process name
       * </pre>
       */
      public Builder clearProcessName() {
        bitField0_ = (bitField0_ & ~0x00000100);
        processName_ = getDefaultInstance().getProcessName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string process_name = 9;</code>
       *
       * <pre>
       * Process name
       * </pre>
       */
      public Builder setProcessNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        processName_ = value;
        onChanged();
        return this;
      }

      // optional int32 thread_id = 10;
      private int threadId_ ;
      /**
       * <code>optional int32 thread_id = 10;</code>
       *
       * <pre>
       * Numeric thread ID
       * </pre>
       */
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 thread_id = 10;</code>
       *
       * <pre>
       * Numeric thread ID
       * </pre>
       */
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <code>optional int32 thread_id = 10;</code>
       *
       * <pre>
       * Numeric thread ID
       * </pre>
       */
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000200;
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 thread_id = 10;</code>
       *
       * <pre>
       * Numeric thread ID
       * </pre>
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        threadId_ = 0;
        onChanged();
        return this;
      }

      // optional string threadName = 11;
      private java.lang.Object threadName_ = "";
      /**
       * <code>optional string threadName = 11;</code>
       *
       * <pre>
       * Thread name
       * </pre>
       */
      public boolean hasThreadName() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string threadName = 11;</code>
       *
       * <pre>
       * Thread name
       * </pre>
       */
      public java.lang.String getThreadName() {
        java.lang.Object ref = threadName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          threadName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string threadName = 11;</code>
       *
       * <pre>
       * Thread name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getThreadNameBytes() {
        java.lang.Object ref = threadName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          threadName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string threadName = 11;</code>
       *
       * <pre>
       * Thread name
       * </pre>
       */
      public Builder setThreadName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        threadName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string threadName = 11;</code>
       *
       * <pre>
       * Thread name
       * </pre>
       */
      public Builder clearThreadName() {
        bitField0_ = (bitField0_ & ~0x00000400);
        threadName_ = getDefaultInstance().getThreadName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string threadName = 11;</code>
       *
       * <pre>
       * Thread name
       * </pre>
       */
      public Builder setThreadNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        threadName_ = value;
        onChanged();
        return this;
      }

      // optional string agent = 12;
      private java.lang.Object agent_ = "";
      /**
       * <code>optional string agent = 12;</code>
       *
       * <pre>
       * An arbitrary string, usually a java class, where this report was generated
       * </pre>
       */
      public boolean hasAgent() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string agent = 12;</code>
       *
       * <pre>
       * An arbitrary string, usually a java class, where this report was generated
       * </pre>
       */
      public java.lang.String getAgent() {
        java.lang.Object ref = agent_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          agent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string agent = 12;</code>
       *
       * <pre>
       * An arbitrary string, usually a java class, where this report was generated
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAgentBytes() {
        java.lang.Object ref = agent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          agent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string agent = 12;</code>
       *
       * <pre>
       * An arbitrary string, usually a java class, where this report was generated
       * </pre>
       */
      public Builder setAgent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        agent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string agent = 12;</code>
       *
       * <pre>
       * An arbitrary string, usually a java class, where this report was generated
       * </pre>
       */
      public Builder clearAgent() {
        bitField0_ = (bitField0_ & ~0x00000800);
        agent_ = getDefaultInstance().getAgent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string agent = 12;</code>
       *
       * <pre>
       * An arbitrary string, usually a java class, where this report was generated
       * </pre>
       */
      public Builder setAgentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        agent_ = value;
        onChanged();
        return this;
      }

      // optional string source = 13;
      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 13;</code>
       *
       * <pre>
       * The source code location where this report was generated
       * </pre>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string source = 13;</code>
       *
       * <pre>
       * The source code location where this report was generated
       * </pre>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 13;</code>
       *
       * <pre>
       * The source code location where this report was generated
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 13;</code>
       *
       * <pre>
       * The source code location where this report was generated
       * </pre>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 13;</code>
       *
       * <pre>
       * The source code location where this report was generated
       * </pre>
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00001000);
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 13;</code>
       *
       * <pre>
       * The source code location where this report was generated
       * </pre>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        source_ = value;
        onChanged();
        return this;
      }

      // optional string label = 14;
      private java.lang.Object label_ = "";
      /**
       * <code>optional string label = 14;</code>
       *
       * <pre>
       * Messages
       * </pre>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string label = 14;</code>
       *
       * <pre>
       * Messages
       * </pre>
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string label = 14;</code>
       *
       * <pre>
       * Messages
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string label = 14;</code>
       *
       * <pre>
       * Messages
       * </pre>
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 14;</code>
       *
       * <pre>
       * Messages
       * </pre>
       */
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00002000);
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 14;</code>
       *
       * <pre>
       * Messages
       * </pre>
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        label_ = value;
        onChanged();
        return this;
      }

      // repeated string key = 15;
      private com.google.protobuf.LazyStringList key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeyIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          key_ = new com.google.protobuf.LazyStringArrayList(key_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public java.util.List<java.lang.String>
          getKeyList() {
        return java.util.Collections.unmodifiableList(key_);
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public int getKeyCount() {
        return key_.size();
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public java.lang.String getKey(int index) {
        return key_.get(index);
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes(int index) {
        return key_.getByteString(index);
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public Builder setKey(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public Builder addKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public Builder addAllKey(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeyIsMutable();
        super.addAll(values, key_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public Builder clearKey() {
        key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 15;</code>
       *
       * <pre>
       * keys for custom fields; only add a key if you will also add a value
       * </pre>
       */
      public Builder addKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }

      // repeated string value = 16;
      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public java.util.List<java.lang.String>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 16;</code>
       *
       * <pre>
       * keys for custom values; only add a value if you also added a key
       * </pre>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }

      // repeated string tags = 17;
      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public java.util.List<java.lang.String>
          getTagsList() {
        return java.util.Collections.unmodifiableList(tags_);
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        super.addAll(values, tags_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 17;</code>
       *
       * <pre>
       * Database tags
       * </pre>
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      // optional int32 tenantClass = 18;
      private int tenantClass_ ;
      /**
       * <code>optional int32 tenantClass = 18;</code>
       *
       * <pre>
       * X-Trace Tenant field
       * </pre>
       */
      public boolean hasTenantClass() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tenantClass = 18;</code>
       *
       * <pre>
       * X-Trace Tenant field
       * </pre>
       */
      public int getTenantClass() {
        return tenantClass_;
      }
      /**
       * <code>optional int32 tenantClass = 18;</code>
       *
       * <pre>
       * X-Trace Tenant field
       * </pre>
       */
      public Builder setTenantClass(int value) {
        bitField0_ |= 0x00020000;
        tenantClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tenantClass = 18;</code>
       *
       * <pre>
       * X-Trace Tenant field
       * </pre>
       */
      public Builder clearTenantClass() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tenantClass_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pubsub.XTraceReportv4)
    }

    static {
      defaultInstance = new XTraceReportv4(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pubsub.XTraceReportv4)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pubsub_XTraceReportv4_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pubsub_XTraceReportv4_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!src/main/protobuf/reporting.proto\022\006pub" +
      "sub\"\310\002\n\016XTraceReportv4\022\017\n\007task_id\030\001 \001(\020\022" +
      "\020\n\010event_id\030\002 \001(\020\022\027\n\017parent_event_id\030\003 \003" +
      "(\020\022\021\n\ttimestamp\030\004 \001(\003\022\013\n\003hrt\030\005 \001(\003\022\016\n\006cy" +
      "cles\030\006 \001(\003\022\014\n\004host\030\007 \001(\t\022\022\n\nprocess_id\030\010" +
      " \001(\005\022\024\n\014process_name\030\t \001(\t\022\021\n\tthread_id\030" +
      "\n \001(\005\022\022\n\nthreadName\030\013 \001(\t\022\r\n\005agent\030\014 \001(\t" +
      "\022\016\n\006source\030\r \001(\t\022\r\n\005label\030\016 \001(\t\022\013\n\003key\030\017" +
      " \003(\t\022\r\n\005value\030\020 \003(\t\022\014\n\004tags\030\021 \003(\t\022\023\n\013ten" +
      "antClass\030\022 \001(\005B(\n\033edu.brown.cs.systems.x",
      "traceB\tReporting"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_pubsub_XTraceReportv4_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_pubsub_XTraceReportv4_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pubsub_XTraceReportv4_descriptor,
              new java.lang.String[] { "TaskId", "EventId", "ParentEventId", "Timestamp", "Hrt", "Cycles", "Host", "ProcessId", "ProcessName", "ThreadId", "ThreadName", "Agent", "Source", "Label", "Key", "Value", "Tags", "TenantClass", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}

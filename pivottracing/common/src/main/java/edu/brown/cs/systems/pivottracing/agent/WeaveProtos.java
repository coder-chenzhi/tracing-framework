// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/Weave.proto

package edu.brown.cs.systems.pivottracing.agent;

public final class WeaveProtos {
  private WeaveProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TracepointSpecOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated string procName = 1;
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    java.util.List<java.lang.String>
    getProcNameList();
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    int getProcNameCount();
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    java.lang.String getProcName(int index);
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    com.google.protobuf.ByteString
        getProcNameBytes(int index);

    // optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
     *
     * <pre>
     * Match a method
     * </pre>
     */
    boolean hasMethodTracepoint();
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
     *
     * <pre>
     * Match a method
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec getMethodTracepoint();
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
     *
     * <pre>
     * Match a method
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder getMethodTracepointOrBuilder();

    // optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;
    /**
     * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
     *
     * <pre>
     * Match a predefined hardcoded tracepoint 
     * </pre>
     */
    boolean hasHardcodedTracepoint();
    /**
     * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
     *
     * <pre>
     * Match a predefined hardcoded tracepoint 
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec getHardcodedTracepoint();
    /**
     * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
     *
     * <pre>
     * Match a predefined hardcoded tracepoint 
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder getHardcodedTracepointOrBuilder();
  }
  /**
   * Protobuf type {@code pivottracingspec.TracepointSpec}
   *
   * <pre>
   * One of several kinds of tracepoint.  Only one tracepoint should be specified 
   * </pre>
   */
  public static final class TracepointSpec extends
      com.google.protobuf.GeneratedMessage
      implements TracepointSpecOrBuilder {
    // Use TracepointSpec.newBuilder() to construct.
    private TracepointSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TracepointSpec(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TracepointSpec defaultInstance;
    public static TracepointSpec getDefaultInstance() {
      return defaultInstance;
    }

    public TracepointSpec getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TracepointSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                procName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              procName_.add(input.readBytes());
              break;
            }
            case 18: {
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = methodTracepoint_.toBuilder();
              }
              methodTracepoint_ = input.readMessage(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(methodTracepoint_);
                methodTracepoint_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = hardcodedTracepoint_.toBuilder();
              }
              hardcodedTracepoint_ = input.readMessage(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hardcodedTracepoint_);
                hardcodedTracepoint_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          procName_ = new com.google.protobuf.UnmodifiableLazyStringList(procName_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_TracepointSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_TracepointSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder.class);
    }

    public static com.google.protobuf.Parser<TracepointSpec> PARSER =
        new com.google.protobuf.AbstractParser<TracepointSpec>() {
      public TracepointSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TracepointSpec(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TracepointSpec> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated string procName = 1;
    public static final int PROCNAME_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList procName_;
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    public java.util.List<java.lang.String>
        getProcNameList() {
      return procName_;
    }
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    public int getProcNameCount() {
      return procName_.size();
    }
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    public java.lang.String getProcName(int index) {
      return procName_.get(index);
    }
    /**
     * <code>repeated string procName = 1;</code>
     *
     * <pre>
     * If specified, only matches processes with the specified process name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProcNameBytes(int index) {
      return procName_.getByteString(index);
    }

    // optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;
    public static final int METHODTRACEPOINT_FIELD_NUMBER = 2;
    private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec methodTracepoint_;
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
     *
     * <pre>
     * Match a method
     * </pre>
     */
    public boolean hasMethodTracepoint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
     *
     * <pre>
     * Match a method
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec getMethodTracepoint() {
      return methodTracepoint_;
    }
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
     *
     * <pre>
     * Match a method
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder getMethodTracepointOrBuilder() {
      return methodTracepoint_;
    }

    // optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;
    public static final int HARDCODEDTRACEPOINT_FIELD_NUMBER = 3;
    private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec hardcodedTracepoint_;
    /**
     * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
     *
     * <pre>
     * Match a predefined hardcoded tracepoint 
     * </pre>
     */
    public boolean hasHardcodedTracepoint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
     *
     * <pre>
     * Match a predefined hardcoded tracepoint 
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec getHardcodedTracepoint() {
      return hardcodedTracepoint_;
    }
    /**
     * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
     *
     * <pre>
     * Match a predefined hardcoded tracepoint 
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder getHardcodedTracepointOrBuilder() {
      return hardcodedTracepoint_;
    }

    private void initFields() {
      procName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      methodTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance();
      hardcodedTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasMethodTracepoint()) {
        if (!getMethodTracepoint().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHardcodedTracepoint()) {
        if (!getHardcodedTracepoint().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < procName_.size(); i++) {
        output.writeBytes(1, procName_.getByteString(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, methodTracepoint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, hardcodedTracepoint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < procName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(procName_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getProcNameList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, methodTracepoint_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, hardcodedTracepoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pivottracingspec.TracepointSpec}
     *
     * <pre>
     * One of several kinds of tracepoint.  Only one tracepoint should be specified 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_TracepointSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_TracepointSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder.class);
      }

      // Construct using edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMethodTracepointFieldBuilder();
          getHardcodedTracepointFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        procName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (methodTracepointBuilder_ == null) {
          methodTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance();
        } else {
          methodTracepointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (hardcodedTracepointBuilder_ == null) {
          hardcodedTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance();
        } else {
          hardcodedTracepointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_TracepointSpec_descriptor;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec getDefaultInstanceForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.getDefaultInstance();
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec build() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec buildPartial() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec result = new edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          procName_ = new com.google.protobuf.UnmodifiableLazyStringList(
              procName_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.procName_ = procName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (methodTracepointBuilder_ == null) {
          result.methodTracepoint_ = methodTracepoint_;
        } else {
          result.methodTracepoint_ = methodTracepointBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (hardcodedTracepointBuilder_ == null) {
          result.hardcodedTracepoint_ = hardcodedTracepoint_;
        } else {
          result.hardcodedTracepoint_ = hardcodedTracepointBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec) {
          return mergeFrom((edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec other) {
        if (other == edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.getDefaultInstance()) return this;
        if (!other.procName_.isEmpty()) {
          if (procName_.isEmpty()) {
            procName_ = other.procName_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureProcNameIsMutable();
            procName_.addAll(other.procName_);
          }
          onChanged();
        }
        if (other.hasMethodTracepoint()) {
          mergeMethodTracepoint(other.getMethodTracepoint());
        }
        if (other.hasHardcodedTracepoint()) {
          mergeHardcodedTracepoint(other.getHardcodedTracepoint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasMethodTracepoint()) {
          if (!getMethodTracepoint().isInitialized()) {
            
            return false;
          }
        }
        if (hasHardcodedTracepoint()) {
          if (!getHardcodedTracepoint().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated string procName = 1;
      private com.google.protobuf.LazyStringList procName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureProcNameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          procName_ = new com.google.protobuf.LazyStringArrayList(procName_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public java.util.List<java.lang.String>
          getProcNameList() {
        return java.util.Collections.unmodifiableList(procName_);
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public int getProcNameCount() {
        return procName_.size();
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public java.lang.String getProcName(int index) {
        return procName_.get(index);
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProcNameBytes(int index) {
        return procName_.getByteString(index);
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public Builder setProcName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProcNameIsMutable();
        procName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public Builder addProcName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProcNameIsMutable();
        procName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public Builder addAllProcName(
          java.lang.Iterable<java.lang.String> values) {
        ensureProcNameIsMutable();
        super.addAll(values, procName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public Builder clearProcName() {
        procName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string procName = 1;</code>
       *
       * <pre>
       * If specified, only matches processes with the specified process name
       * </pre>
       */
      public Builder addProcNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProcNameIsMutable();
        procName_.add(value);
        onChanged();
        return this;
      }

      // optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;
      private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec methodTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder> methodTracepointBuilder_;
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public boolean hasMethodTracepoint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec getMethodTracepoint() {
        if (methodTracepointBuilder_ == null) {
          return methodTracepoint_;
        } else {
          return methodTracepointBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public Builder setMethodTracepoint(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec value) {
        if (methodTracepointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          methodTracepoint_ = value;
          onChanged();
        } else {
          methodTracepointBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public Builder setMethodTracepoint(
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder builderForValue) {
        if (methodTracepointBuilder_ == null) {
          methodTracepoint_ = builderForValue.build();
          onChanged();
        } else {
          methodTracepointBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public Builder mergeMethodTracepoint(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec value) {
        if (methodTracepointBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              methodTracepoint_ != edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance()) {
            methodTracepoint_ =
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.newBuilder(methodTracepoint_).mergeFrom(value).buildPartial();
          } else {
            methodTracepoint_ = value;
          }
          onChanged();
        } else {
          methodTracepointBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public Builder clearMethodTracepoint() {
        if (methodTracepointBuilder_ == null) {
          methodTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance();
          onChanged();
        } else {
          methodTracepointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder getMethodTracepointBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMethodTracepointFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder getMethodTracepointOrBuilder() {
        if (methodTracepointBuilder_ != null) {
          return methodTracepointBuilder_.getMessageOrBuilder();
        } else {
          return methodTracepoint_;
        }
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec methodTracepoint = 2;</code>
       *
       * <pre>
       * Match a method
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder> 
          getMethodTracepointFieldBuilder() {
        if (methodTracepointBuilder_ == null) {
          methodTracepointBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder>(
                  methodTracepoint_,
                  getParentForChildren(),
                  isClean());
          methodTracepoint_ = null;
        }
        return methodTracepointBuilder_;
      }

      // optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;
      private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec hardcodedTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder> hardcodedTracepointBuilder_;
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public boolean hasHardcodedTracepoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec getHardcodedTracepoint() {
        if (hardcodedTracepointBuilder_ == null) {
          return hardcodedTracepoint_;
        } else {
          return hardcodedTracepointBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public Builder setHardcodedTracepoint(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec value) {
        if (hardcodedTracepointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hardcodedTracepoint_ = value;
          onChanged();
        } else {
          hardcodedTracepointBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public Builder setHardcodedTracepoint(
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder builderForValue) {
        if (hardcodedTracepointBuilder_ == null) {
          hardcodedTracepoint_ = builderForValue.build();
          onChanged();
        } else {
          hardcodedTracepointBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public Builder mergeHardcodedTracepoint(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec value) {
        if (hardcodedTracepointBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              hardcodedTracepoint_ != edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance()) {
            hardcodedTracepoint_ =
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.newBuilder(hardcodedTracepoint_).mergeFrom(value).buildPartial();
          } else {
            hardcodedTracepoint_ = value;
          }
          onChanged();
        } else {
          hardcodedTracepointBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public Builder clearHardcodedTracepoint() {
        if (hardcodedTracepointBuilder_ == null) {
          hardcodedTracepoint_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance();
          onChanged();
        } else {
          hardcodedTracepointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder getHardcodedTracepointBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHardcodedTracepointFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder getHardcodedTracepointOrBuilder() {
        if (hardcodedTracepointBuilder_ != null) {
          return hardcodedTracepointBuilder_.getMessageOrBuilder();
        } else {
          return hardcodedTracepoint_;
        }
      }
      /**
       * <code>optional .pivottracingspec.HardcodedTracepointSpec hardcodedTracepoint = 3;</code>
       *
       * <pre>
       * Match a predefined hardcoded tracepoint 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder> 
          getHardcodedTracepointFieldBuilder() {
        if (hardcodedTracepointBuilder_ == null) {
          hardcodedTracepointBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder>(
                  hardcodedTracepoint_,
                  getParentForChildren(),
                  isClean());
          hardcodedTracepoint_ = null;
        }
        return hardcodedTracepointBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pivottracingspec.TracepointSpec)
    }

    static {
      defaultInstance = new TracepointSpec(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pivottracingspec.TracepointSpec)
  }

  public interface MultiExportedVariableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string type = 1;
    /**
     * <code>required string type = 1;</code>
     *
     * <pre>
     * fully qualified java type of the variable (eg, for "int[]", this will be "int")
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required string type = 1;</code>
     *
     * <pre>
     * fully qualified java type of the variable (eg, for "int[]", this will be "int")
     * </pre>
     */
    java.lang.String getType();
    /**
     * <code>required string type = 1;</code>
     *
     * <pre>
     * fully qualified java type of the variable (eg, for "int[]", this will be "int")
     * </pre>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    // required string literal = 2;
    /**
     * <code>required string literal = 2;</code>
     *
     * <pre>
     * literal java code for the variable
     * </pre>
     */
    boolean hasLiteral();
    /**
     * <code>required string literal = 2;</code>
     *
     * <pre>
     * literal java code for the variable
     * </pre>
     */
    java.lang.String getLiteral();
    /**
     * <code>required string literal = 2;</code>
     *
     * <pre>
     * literal java code for the variable
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiteralBytes();

    // optional string postProcess = 3;
    /**
     * <code>optional string postProcess = 3;</code>
     *
     * <pre>
     * optional processing of each element (eg ".toString()")
     * </pre>
     */
    boolean hasPostProcess();
    /**
     * <code>optional string postProcess = 3;</code>
     *
     * <pre>
     * optional processing of each element (eg ".toString()")
     * </pre>
     */
    java.lang.String getPostProcess();
    /**
     * <code>optional string postProcess = 3;</code>
     *
     * <pre>
     * optional processing of each element (eg ".toString()")
     * </pre>
     */
    com.google.protobuf.ByteString
        getPostProcessBytes();
  }
  /**
   * Protobuf type {@code pivottracingspec.MultiExportedVariable}
   *
   * <pre>
   * Used when one variable should be treated as multiple tuples (eg, an array) 
   * </pre>
   */
  public static final class MultiExportedVariable extends
      com.google.protobuf.GeneratedMessage
      implements MultiExportedVariableOrBuilder {
    // Use MultiExportedVariable.newBuilder() to construct.
    private MultiExportedVariable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultiExportedVariable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultiExportedVariable defaultInstance;
    public static MultiExportedVariable getDefaultInstance() {
      return defaultInstance;
    }

    public MultiExportedVariable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultiExportedVariable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              literal_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              postProcess_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MultiExportedVariable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MultiExportedVariable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder.class);
    }

    public static com.google.protobuf.Parser<MultiExportedVariable> PARSER =
        new com.google.protobuf.AbstractParser<MultiExportedVariable>() {
      public MultiExportedVariable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiExportedVariable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MultiExportedVariable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.Object type_;
    /**
     * <code>required string type = 1;</code>
     *
     * <pre>
     * fully qualified java type of the variable (eg, for "int[]", this will be "int")
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string type = 1;</code>
     *
     * <pre>
     * fully qualified java type of the variable (eg, for "int[]", this will be "int")
     * </pre>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string type = 1;</code>
     *
     * <pre>
     * fully qualified java type of the variable (eg, for "int[]", this will be "int")
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string literal = 2;
    public static final int LITERAL_FIELD_NUMBER = 2;
    private java.lang.Object literal_;
    /**
     * <code>required string literal = 2;</code>
     *
     * <pre>
     * literal java code for the variable
     * </pre>
     */
    public boolean hasLiteral() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string literal = 2;</code>
     *
     * <pre>
     * literal java code for the variable
     * </pre>
     */
    public java.lang.String getLiteral() {
      java.lang.Object ref = literal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          literal_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string literal = 2;</code>
     *
     * <pre>
     * literal java code for the variable
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiteralBytes() {
      java.lang.Object ref = literal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        literal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string postProcess = 3;
    public static final int POSTPROCESS_FIELD_NUMBER = 3;
    private java.lang.Object postProcess_;
    /**
     * <code>optional string postProcess = 3;</code>
     *
     * <pre>
     * optional processing of each element (eg ".toString()")
     * </pre>
     */
    public boolean hasPostProcess() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string postProcess = 3;</code>
     *
     * <pre>
     * optional processing of each element (eg ".toString()")
     * </pre>
     */
    public java.lang.String getPostProcess() {
      java.lang.Object ref = postProcess_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          postProcess_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string postProcess = 3;</code>
     *
     * <pre>
     * optional processing of each element (eg ".toString()")
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPostProcessBytes() {
      java.lang.Object ref = postProcess_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        postProcess_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = "";
      literal_ = "";
      postProcess_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiteral()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiteralBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPostProcessBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiteralBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPostProcessBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pivottracingspec.MultiExportedVariable}
     *
     * <pre>
     * Used when one variable should be treated as multiple tuples (eg, an array) 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MultiExportedVariable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MultiExportedVariable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder.class);
      }

      // Construct using edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        literal_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        postProcess_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MultiExportedVariable_descriptor;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable getDefaultInstanceForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance();
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable build() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable buildPartial() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable result = new edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.literal_ = literal_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.postProcess_ = postProcess_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable) {
          return mergeFrom((edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable other) {
        if (other == edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance()) return this;
        if (other.hasType()) {
          bitField0_ |= 0x00000001;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasLiteral()) {
          bitField0_ |= 0x00000002;
          literal_ = other.literal_;
          onChanged();
        }
        if (other.hasPostProcess()) {
          bitField0_ |= 0x00000004;
          postProcess_ = other.postProcess_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasLiteral()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string type = 1;
      private java.lang.Object type_ = "";
      /**
       * <code>required string type = 1;</code>
       *
       * <pre>
       * fully qualified java type of the variable (eg, for "int[]", this will be "int")
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string type = 1;</code>
       *
       * <pre>
       * fully qualified java type of the variable (eg, for "int[]", this will be "int")
       * </pre>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string type = 1;</code>
       *
       * <pre>
       * fully qualified java type of the variable (eg, for "int[]", this will be "int")
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string type = 1;</code>
       *
       * <pre>
       * fully qualified java type of the variable (eg, for "int[]", this will be "int")
       * </pre>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string type = 1;</code>
       *
       * <pre>
       * fully qualified java type of the variable (eg, for "int[]", this will be "int")
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>required string type = 1;</code>
       *
       * <pre>
       * fully qualified java type of the variable (eg, for "int[]", this will be "int")
       * </pre>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      // required string literal = 2;
      private java.lang.Object literal_ = "";
      /**
       * <code>required string literal = 2;</code>
       *
       * <pre>
       * literal java code for the variable
       * </pre>
       */
      public boolean hasLiteral() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string literal = 2;</code>
       *
       * <pre>
       * literal java code for the variable
       * </pre>
       */
      public java.lang.String getLiteral() {
        java.lang.Object ref = literal_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          literal_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string literal = 2;</code>
       *
       * <pre>
       * literal java code for the variable
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiteralBytes() {
        java.lang.Object ref = literal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          literal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string literal = 2;</code>
       *
       * <pre>
       * literal java code for the variable
       * </pre>
       */
      public Builder setLiteral(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        literal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string literal = 2;</code>
       *
       * <pre>
       * literal java code for the variable
       * </pre>
       */
      public Builder clearLiteral() {
        bitField0_ = (bitField0_ & ~0x00000002);
        literal_ = getDefaultInstance().getLiteral();
        onChanged();
        return this;
      }
      /**
       * <code>required string literal = 2;</code>
       *
       * <pre>
       * literal java code for the variable
       * </pre>
       */
      public Builder setLiteralBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        literal_ = value;
        onChanged();
        return this;
      }

      // optional string postProcess = 3;
      private java.lang.Object postProcess_ = "";
      /**
       * <code>optional string postProcess = 3;</code>
       *
       * <pre>
       * optional processing of each element (eg ".toString()")
       * </pre>
       */
      public boolean hasPostProcess() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string postProcess = 3;</code>
       *
       * <pre>
       * optional processing of each element (eg ".toString()")
       * </pre>
       */
      public java.lang.String getPostProcess() {
        java.lang.Object ref = postProcess_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          postProcess_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string postProcess = 3;</code>
       *
       * <pre>
       * optional processing of each element (eg ".toString()")
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPostProcessBytes() {
        java.lang.Object ref = postProcess_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          postProcess_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string postProcess = 3;</code>
       *
       * <pre>
       * optional processing of each element (eg ".toString()")
       * </pre>
       */
      public Builder setPostProcess(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        postProcess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string postProcess = 3;</code>
       *
       * <pre>
       * optional processing of each element (eg ".toString()")
       * </pre>
       */
      public Builder clearPostProcess() {
        bitField0_ = (bitField0_ & ~0x00000004);
        postProcess_ = getDefaultInstance().getPostProcess();
        onChanged();
        return this;
      }
      /**
       * <code>optional string postProcess = 3;</code>
       *
       * <pre>
       * optional processing of each element (eg ".toString()")
       * </pre>
       */
      public Builder setPostProcessBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        postProcess_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pivottracingspec.MultiExportedVariable)
    }

    static {
      defaultInstance = new MultiExportedVariable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pivottracingspec.MultiExportedVariable)
  }

  public interface ExportedVariableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string literal = 1;
    /**
     * <code>optional string literal = 1;</code>
     *
     * <pre>
     * Just a literal exported variable
     * </pre>
     */
    boolean hasLiteral();
    /**
     * <code>optional string literal = 1;</code>
     *
     * <pre>
     * Just a literal exported variable
     * </pre>
     */
    java.lang.String getLiteral();
    /**
     * <code>optional string literal = 1;</code>
     *
     * <pre>
     * Just a literal exported variable
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiteralBytes();

    // optional .pivottracingspec.MultiExportedVariable multi = 2;
    /**
     * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
     *
     * <pre>
     * An array or collection variable that should be exported as multiple tuples
     * </pre>
     */
    boolean hasMulti();
    /**
     * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
     *
     * <pre>
     * An array or collection variable that should be exported as multiple tuples
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable getMulti();
    /**
     * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
     *
     * <pre>
     * An array or collection variable that should be exported as multiple tuples
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder getMultiOrBuilder();
  }
  /**
   * Protobuf type {@code pivottracingspec.ExportedVariable}
   *
   * <pre>
   * Variable exported by a tracepoint 
   * </pre>
   */
  public static final class ExportedVariable extends
      com.google.protobuf.GeneratedMessage
      implements ExportedVariableOrBuilder {
    // Use ExportedVariable.newBuilder() to construct.
    private ExportedVariable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExportedVariable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExportedVariable defaultInstance;
    public static ExportedVariable getDefaultInstance() {
      return defaultInstance;
    }

    public ExportedVariable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExportedVariable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              literal_ = input.readBytes();
              break;
            }
            case 18: {
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = multi_.toBuilder();
              }
              multi_ = input.readMessage(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multi_);
                multi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_ExportedVariable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_ExportedVariable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder.class);
    }

    public static com.google.protobuf.Parser<ExportedVariable> PARSER =
        new com.google.protobuf.AbstractParser<ExportedVariable>() {
      public ExportedVariable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExportedVariable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExportedVariable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string literal = 1;
    public static final int LITERAL_FIELD_NUMBER = 1;
    private java.lang.Object literal_;
    /**
     * <code>optional string literal = 1;</code>
     *
     * <pre>
     * Just a literal exported variable
     * </pre>
     */
    public boolean hasLiteral() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string literal = 1;</code>
     *
     * <pre>
     * Just a literal exported variable
     * </pre>
     */
    public java.lang.String getLiteral() {
      java.lang.Object ref = literal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          literal_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string literal = 1;</code>
     *
     * <pre>
     * Just a literal exported variable
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiteralBytes() {
      java.lang.Object ref = literal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        literal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .pivottracingspec.MultiExportedVariable multi = 2;
    public static final int MULTI_FIELD_NUMBER = 2;
    private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable multi_;
    /**
     * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
     *
     * <pre>
     * An array or collection variable that should be exported as multiple tuples
     * </pre>
     */
    public boolean hasMulti() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
     *
     * <pre>
     * An array or collection variable that should be exported as multiple tuples
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable getMulti() {
      return multi_;
    }
    /**
     * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
     *
     * <pre>
     * An array or collection variable that should be exported as multiple tuples
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder getMultiOrBuilder() {
      return multi_;
    }

    private void initFields() {
      literal_ = "";
      multi_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasMulti()) {
        if (!getMulti().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLiteralBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, multi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLiteralBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, multi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pivottracingspec.ExportedVariable}
     *
     * <pre>
     * Variable exported by a tracepoint 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_ExportedVariable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_ExportedVariable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder.class);
      }

      // Construct using edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMultiFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        literal_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (multiBuilder_ == null) {
          multi_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance();
        } else {
          multiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_ExportedVariable_descriptor;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable getDefaultInstanceForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.getDefaultInstance();
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable build() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable buildPartial() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable result = new edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.literal_ = literal_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (multiBuilder_ == null) {
          result.multi_ = multi_;
        } else {
          result.multi_ = multiBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable) {
          return mergeFrom((edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable other) {
        if (other == edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.getDefaultInstance()) return this;
        if (other.hasLiteral()) {
          bitField0_ |= 0x00000001;
          literal_ = other.literal_;
          onChanged();
        }
        if (other.hasMulti()) {
          mergeMulti(other.getMulti());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasMulti()) {
          if (!getMulti().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string literal = 1;
      private java.lang.Object literal_ = "";
      /**
       * <code>optional string literal = 1;</code>
       *
       * <pre>
       * Just a literal exported variable
       * </pre>
       */
      public boolean hasLiteral() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string literal = 1;</code>
       *
       * <pre>
       * Just a literal exported variable
       * </pre>
       */
      public java.lang.String getLiteral() {
        java.lang.Object ref = literal_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          literal_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string literal = 1;</code>
       *
       * <pre>
       * Just a literal exported variable
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiteralBytes() {
        java.lang.Object ref = literal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          literal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string literal = 1;</code>
       *
       * <pre>
       * Just a literal exported variable
       * </pre>
       */
      public Builder setLiteral(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        literal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string literal = 1;</code>
       *
       * <pre>
       * Just a literal exported variable
       * </pre>
       */
      public Builder clearLiteral() {
        bitField0_ = (bitField0_ & ~0x00000001);
        literal_ = getDefaultInstance().getLiteral();
        onChanged();
        return this;
      }
      /**
       * <code>optional string literal = 1;</code>
       *
       * <pre>
       * Just a literal exported variable
       * </pre>
       */
      public Builder setLiteralBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        literal_ = value;
        onChanged();
        return this;
      }

      // optional .pivottracingspec.MultiExportedVariable multi = 2;
      private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable multi_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder> multiBuilder_;
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public boolean hasMulti() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable getMulti() {
        if (multiBuilder_ == null) {
          return multi_;
        } else {
          return multiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public Builder setMulti(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable value) {
        if (multiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multi_ = value;
          onChanged();
        } else {
          multiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public Builder setMulti(
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder builderForValue) {
        if (multiBuilder_ == null) {
          multi_ = builderForValue.build();
          onChanged();
        } else {
          multiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public Builder mergeMulti(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable value) {
        if (multiBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              multi_ != edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance()) {
            multi_ =
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.newBuilder(multi_).mergeFrom(value).buildPartial();
          } else {
            multi_ = value;
          }
          onChanged();
        } else {
          multiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public Builder clearMulti() {
        if (multiBuilder_ == null) {
          multi_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.getDefaultInstance();
          onChanged();
        } else {
          multiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder getMultiBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMultiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder getMultiOrBuilder() {
        if (multiBuilder_ != null) {
          return multiBuilder_.getMessageOrBuilder();
        } else {
          return multi_;
        }
      }
      /**
       * <code>optional .pivottracingspec.MultiExportedVariable multi = 2;</code>
       *
       * <pre>
       * An array or collection variable that should be exported as multiple tuples
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder> 
          getMultiFieldBuilder() {
        if (multiBuilder_ == null) {
          multiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariable.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MultiExportedVariableOrBuilder>(
                  multi_,
                  getParentForChildren(),
                  isClean());
          multi_ = null;
        }
        return multiBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pivottracingspec.ExportedVariable)
    }

    static {
      defaultInstance = new ExportedVariable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pivottracingspec.ExportedVariable)
  }

  public interface MethodTracepointSpecOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string className = 1;
    /**
     * <code>required string className = 1;</code>
     *
     * <pre>
     * the fully qualified name of the class to instrument
     * </pre>
     */
    boolean hasClassName();
    /**
     * <code>required string className = 1;</code>
     *
     * <pre>
     * the fully qualified name of the class to instrument
     * </pre>
     */
    java.lang.String getClassName();
    /**
     * <code>required string className = 1;</code>
     *
     * <pre>
     * the fully qualified name of the class to instrument
     * </pre>
     */
    com.google.protobuf.ByteString
        getClassNameBytes();

    // required string methodName = 2;
    /**
     * <code>required string methodName = 2;</code>
     *
     * <pre>
     * the method name to instrument
     * </pre>
     */
    boolean hasMethodName();
    /**
     * <code>required string methodName = 2;</code>
     *
     * <pre>
     * the method name to instrument
     * </pre>
     */
    java.lang.String getMethodName();
    /**
     * <code>required string methodName = 2;</code>
     *
     * <pre>
     * the method name to instrument
     * </pre>
     */
    com.google.protobuf.ByteString
        getMethodNameBytes();

    // repeated string paramClass = 3;
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    java.util.List<java.lang.String>
    getParamClassList();
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    int getParamClassCount();
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    java.lang.String getParamClass(int index);
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    com.google.protobuf.ByteString
        getParamClassBytes(int index);

    // optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
     *
     * <pre>
     * where to insert the probe
     * </pre>
     */
    boolean hasWhere();
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
     *
     * <pre>
     * where to insert the probe
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where getWhere();

    // optional int32 lineNumber = 5;
    /**
     * <code>optional int32 lineNumber = 5;</code>
     *
     * <pre>
     * if where is a line number this must be set
     * </pre>
     */
    boolean hasLineNumber();
    /**
     * <code>optional int32 lineNumber = 5;</code>
     *
     * <pre>
     * if where is a line number this must be set
     * </pre>
     */
    int getLineNumber();

    // repeated .pivottracingspec.ExportedVariable adviceArg = 6;
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable> 
        getAdviceArgList();
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable getAdviceArg(int index);
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    int getAdviceArgCount();
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    java.util.List<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder> 
        getAdviceArgOrBuilderList();
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder getAdviceArgOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pivottracingspec.MethodTracepointSpec}
   *
   * <pre>
   * Matches a specific method invocation 
   * </pre>
   */
  public static final class MethodTracepointSpec extends
      com.google.protobuf.GeneratedMessage
      implements MethodTracepointSpecOrBuilder {
    // Use MethodTracepointSpec.newBuilder() to construct.
    private MethodTracepointSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MethodTracepointSpec(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MethodTracepointSpec defaultInstance;
    public static MethodTracepointSpec getDefaultInstance() {
      return defaultInstance;
    }

    public MethodTracepointSpec getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MethodTracepointSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              className_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              methodName_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                paramClass_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              paramClass_.add(input.readBytes());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where value = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                where_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              lineNumber_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                adviceArg_ = new java.util.ArrayList<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable>();
                mutable_bitField0_ |= 0x00000020;
              }
              adviceArg_.add(input.readMessage(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          paramClass_ = new com.google.protobuf.UnmodifiableLazyStringList(paramClass_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          adviceArg_ = java.util.Collections.unmodifiableList(adviceArg_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MethodTracepointSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MethodTracepointSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder.class);
    }

    public static com.google.protobuf.Parser<MethodTracepointSpec> PARSER =
        new com.google.protobuf.AbstractParser<MethodTracepointSpec>() {
      public MethodTracepointSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MethodTracepointSpec(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MethodTracepointSpec> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code pivottracingspec.MethodTracepointSpec.Where}
     *
     * <pre>
     * enum for where in a method the advice invocation happens 
     * </pre>
     */
    public enum Where
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ENTRY = 1;</code>
       *
       * <pre>
       * weave to method entry
       * </pre>
       */
      ENTRY(0, 1),
      /**
       * <code>RETURN = 2;</code>
       *
       * <pre>
       * weave where method returns normally
       * </pre>
       */
      RETURN(1, 2),
      /**
       * <code>FINALLY = 3;</code>
       *
       * <pre>
       * weave where method returns or throws an exception
       * </pre>
       */
      FINALLY(2, 3),
      /**
       * <code>LINENUM = 4;</code>
       *
       * <pre>
       * weave into the specified line number
       * </pre>
       */
      LINENUM(3, 4),
      ;

      /**
       * <code>ENTRY = 1;</code>
       *
       * <pre>
       * weave to method entry
       * </pre>
       */
      public static final int ENTRY_VALUE = 1;
      /**
       * <code>RETURN = 2;</code>
       *
       * <pre>
       * weave where method returns normally
       * </pre>
       */
      public static final int RETURN_VALUE = 2;
      /**
       * <code>FINALLY = 3;</code>
       *
       * <pre>
       * weave where method returns or throws an exception
       * </pre>
       */
      public static final int FINALLY_VALUE = 3;
      /**
       * <code>LINENUM = 4;</code>
       *
       * <pre>
       * weave into the specified line number
       * </pre>
       */
      public static final int LINENUM_VALUE = 4;


      public final int getNumber() { return value; }

      public static Where valueOf(int value) {
        switch (value) {
          case 1: return ENTRY;
          case 2: return RETURN;
          case 3: return FINALLY;
          case 4: return LINENUM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Where>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Where>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Where>() {
              public Where findValueByNumber(int number) {
                return Where.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDescriptor().getEnumTypes().get(0);
      }

      private static final Where[] VALUES = values();

      public static Where valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Where(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:pivottracingspec.MethodTracepointSpec.Where)
    }

    private int bitField0_;
    // required string className = 1;
    public static final int CLASSNAME_FIELD_NUMBER = 1;
    private java.lang.Object className_;
    /**
     * <code>required string className = 1;</code>
     *
     * <pre>
     * the fully qualified name of the class to instrument
     * </pre>
     */
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string className = 1;</code>
     *
     * <pre>
     * the fully qualified name of the class to instrument
     * </pre>
     */
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          className_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string className = 1;</code>
     *
     * <pre>
     * the fully qualified name of the class to instrument
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string methodName = 2;
    public static final int METHODNAME_FIELD_NUMBER = 2;
    private java.lang.Object methodName_;
    /**
     * <code>required string methodName = 2;</code>
     *
     * <pre>
     * the method name to instrument
     * </pre>
     */
    public boolean hasMethodName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string methodName = 2;</code>
     *
     * <pre>
     * the method name to instrument
     * </pre>
     */
    public java.lang.String getMethodName() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          methodName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string methodName = 2;</code>
     *
     * <pre>
     * the method name to instrument
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string paramClass = 3;
    public static final int PARAMCLASS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList paramClass_;
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    public java.util.List<java.lang.String>
        getParamClassList() {
      return paramClass_;
    }
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    public int getParamClassCount() {
      return paramClass_.size();
    }
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    public java.lang.String getParamClass(int index) {
      return paramClass_.get(index);
    }
    /**
     * <code>repeated string paramClass = 3;</code>
     *
     * <pre>
     * the classes of the method parameters (to deal with overloaded methods)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParamClassBytes(int index) {
      return paramClass_.getByteString(index);
    }

    // optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];
    public static final int WHERE_FIELD_NUMBER = 4;
    private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where where_;
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
     *
     * <pre>
     * where to insert the probe
     * </pre>
     */
    public boolean hasWhere() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
     *
     * <pre>
     * where to insert the probe
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where getWhere() {
      return where_;
    }

    // optional int32 lineNumber = 5;
    public static final int LINENUMBER_FIELD_NUMBER = 5;
    private int lineNumber_;
    /**
     * <code>optional int32 lineNumber = 5;</code>
     *
     * <pre>
     * if where is a line number this must be set
     * </pre>
     */
    public boolean hasLineNumber() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 lineNumber = 5;</code>
     *
     * <pre>
     * if where is a line number this must be set
     * </pre>
     */
    public int getLineNumber() {
      return lineNumber_;
    }

    // repeated .pivottracingspec.ExportedVariable adviceArg = 6;
    public static final int ADVICEARG_FIELD_NUMBER = 6;
    private java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable> adviceArg_;
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    public java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable> getAdviceArgList() {
      return adviceArg_;
    }
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    public java.util.List<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder> 
        getAdviceArgOrBuilderList() {
      return adviceArg_;
    }
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    public int getAdviceArgCount() {
      return adviceArg_.size();
    }
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable getAdviceArg(int index) {
      return adviceArg_.get(index);
    }
    /**
     * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
     *
     * <pre>
     * arguments to pass to the advice
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder getAdviceArgOrBuilder(
        int index) {
      return adviceArg_.get(index);
    }

    private void initFields() {
      className_ = "";
      methodName_ = "";
      paramClass_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      where_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where.ENTRY;
      lineNumber_ = 0;
      adviceArg_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClassName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMethodName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAdviceArgCount(); i++) {
        if (!getAdviceArg(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMethodNameBytes());
      }
      for (int i = 0; i < paramClass_.size(); i++) {
        output.writeBytes(3, paramClass_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, where_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, lineNumber_);
      }
      for (int i = 0; i < adviceArg_.size(); i++) {
        output.writeMessage(6, adviceArg_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMethodNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < paramClass_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(paramClass_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getParamClassList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, where_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, lineNumber_);
      }
      for (int i = 0; i < adviceArg_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, adviceArg_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pivottracingspec.MethodTracepointSpec}
     *
     * <pre>
     * Matches a specific method invocation 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MethodTracepointSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MethodTracepointSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Builder.class);
      }

      // Construct using edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAdviceArgFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        className_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        methodName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        paramClass_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        where_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where.ENTRY;
        bitField0_ = (bitField0_ & ~0x00000008);
        lineNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (adviceArgBuilder_ == null) {
          adviceArg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          adviceArgBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_MethodTracepointSpec_descriptor;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec getDefaultInstanceForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance();
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec build() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec buildPartial() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec result = new edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.className_ = className_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.methodName_ = methodName_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          paramClass_ = new com.google.protobuf.UnmodifiableLazyStringList(
              paramClass_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.paramClass_ = paramClass_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.where_ = where_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lineNumber_ = lineNumber_;
        if (adviceArgBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            adviceArg_ = java.util.Collections.unmodifiableList(adviceArg_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.adviceArg_ = adviceArg_;
        } else {
          result.adviceArg_ = adviceArgBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec) {
          return mergeFrom((edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec other) {
        if (other == edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.getDefaultInstance()) return this;
        if (other.hasClassName()) {
          bitField0_ |= 0x00000001;
          className_ = other.className_;
          onChanged();
        }
        if (other.hasMethodName()) {
          bitField0_ |= 0x00000002;
          methodName_ = other.methodName_;
          onChanged();
        }
        if (!other.paramClass_.isEmpty()) {
          if (paramClass_.isEmpty()) {
            paramClass_ = other.paramClass_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParamClassIsMutable();
            paramClass_.addAll(other.paramClass_);
          }
          onChanged();
        }
        if (other.hasWhere()) {
          setWhere(other.getWhere());
        }
        if (other.hasLineNumber()) {
          setLineNumber(other.getLineNumber());
        }
        if (adviceArgBuilder_ == null) {
          if (!other.adviceArg_.isEmpty()) {
            if (adviceArg_.isEmpty()) {
              adviceArg_ = other.adviceArg_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureAdviceArgIsMutable();
              adviceArg_.addAll(other.adviceArg_);
            }
            onChanged();
          }
        } else {
          if (!other.adviceArg_.isEmpty()) {
            if (adviceArgBuilder_.isEmpty()) {
              adviceArgBuilder_.dispose();
              adviceArgBuilder_ = null;
              adviceArg_ = other.adviceArg_;
              bitField0_ = (bitField0_ & ~0x00000020);
              adviceArgBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAdviceArgFieldBuilder() : null;
            } else {
              adviceArgBuilder_.addAllMessages(other.adviceArg_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClassName()) {
          
          return false;
        }
        if (!hasMethodName()) {
          
          return false;
        }
        for (int i = 0; i < getAdviceArgCount(); i++) {
          if (!getAdviceArg(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string className = 1;
      private java.lang.Object className_ = "";
      /**
       * <code>required string className = 1;</code>
       *
       * <pre>
       * the fully qualified name of the class to instrument
       * </pre>
       */
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string className = 1;</code>
       *
       * <pre>
       * the fully qualified name of the class to instrument
       * </pre>
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string className = 1;</code>
       *
       * <pre>
       * the fully qualified name of the class to instrument
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string className = 1;</code>
       *
       * <pre>
       * the fully qualified name of the class to instrument
       * </pre>
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        className_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string className = 1;</code>
       *
       * <pre>
       * the fully qualified name of the class to instrument
       * </pre>
       */
      public Builder clearClassName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      /**
       * <code>required string className = 1;</code>
       *
       * <pre>
       * the fully qualified name of the class to instrument
       * </pre>
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        className_ = value;
        onChanged();
        return this;
      }

      // required string methodName = 2;
      private java.lang.Object methodName_ = "";
      /**
       * <code>required string methodName = 2;</code>
       *
       * <pre>
       * the method name to instrument
       * </pre>
       */
      public boolean hasMethodName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string methodName = 2;</code>
       *
       * <pre>
       * the method name to instrument
       * </pre>
       */
      public java.lang.String getMethodName() {
        java.lang.Object ref = methodName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string methodName = 2;</code>
       *
       * <pre>
       * the method name to instrument
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMethodNameBytes() {
        java.lang.Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string methodName = 2;</code>
       *
       * <pre>
       * the method name to instrument
       * </pre>
       */
      public Builder setMethodName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        methodName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string methodName = 2;</code>
       *
       * <pre>
       * the method name to instrument
       * </pre>
       */
      public Builder clearMethodName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }
      /**
       * <code>required string methodName = 2;</code>
       *
       * <pre>
       * the method name to instrument
       * </pre>
       */
      public Builder setMethodNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        methodName_ = value;
        onChanged();
        return this;
      }

      // repeated string paramClass = 3;
      private com.google.protobuf.LazyStringList paramClass_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureParamClassIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          paramClass_ = new com.google.protobuf.LazyStringArrayList(paramClass_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public java.util.List<java.lang.String>
          getParamClassList() {
        return java.util.Collections.unmodifiableList(paramClass_);
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public int getParamClassCount() {
        return paramClass_.size();
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public java.lang.String getParamClass(int index) {
        return paramClass_.get(index);
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParamClassBytes(int index) {
        return paramClass_.getByteString(index);
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public Builder setParamClass(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParamClassIsMutable();
        paramClass_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public Builder addParamClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParamClassIsMutable();
        paramClass_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public Builder addAllParamClass(
          java.lang.Iterable<java.lang.String> values) {
        ensureParamClassIsMutable();
        super.addAll(values, paramClass_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public Builder clearParamClass() {
        paramClass_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string paramClass = 3;</code>
       *
       * <pre>
       * the classes of the method parameters (to deal with overloaded methods)
       * </pre>
       */
      public Builder addParamClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParamClassIsMutable();
        paramClass_.add(value);
        onChanged();
        return this;
      }

      // optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];
      private edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where where_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where.ENTRY;
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
       *
       * <pre>
       * where to insert the probe
       * </pre>
       */
      public boolean hasWhere() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
       *
       * <pre>
       * where to insert the probe
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where getWhere() {
        return where_;
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
       *
       * <pre>
       * where to insert the probe
       * </pre>
       */
      public Builder setWhere(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        where_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .pivottracingspec.MethodTracepointSpec.Where where = 4 [default = ENTRY];</code>
       *
       * <pre>
       * where to insert the probe
       * </pre>
       */
      public Builder clearWhere() {
        bitField0_ = (bitField0_ & ~0x00000008);
        where_ = edu.brown.cs.systems.pivottracing.agent.WeaveProtos.MethodTracepointSpec.Where.ENTRY;
        onChanged();
        return this;
      }

      // optional int32 lineNumber = 5;
      private int lineNumber_ ;
      /**
       * <code>optional int32 lineNumber = 5;</code>
       *
       * <pre>
       * if where is a line number this must be set
       * </pre>
       */
      public boolean hasLineNumber() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 lineNumber = 5;</code>
       *
       * <pre>
       * if where is a line number this must be set
       * </pre>
       */
      public int getLineNumber() {
        return lineNumber_;
      }
      /**
       * <code>optional int32 lineNumber = 5;</code>
       *
       * <pre>
       * if where is a line number this must be set
       * </pre>
       */
      public Builder setLineNumber(int value) {
        bitField0_ |= 0x00000010;
        lineNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lineNumber = 5;</code>
       *
       * <pre>
       * if where is a line number this must be set
       * </pre>
       */
      public Builder clearLineNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lineNumber_ = 0;
        onChanged();
        return this;
      }

      // repeated .pivottracingspec.ExportedVariable adviceArg = 6;
      private java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable> adviceArg_ =
        java.util.Collections.emptyList();
      private void ensureAdviceArgIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          adviceArg_ = new java.util.ArrayList<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable>(adviceArg_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder> adviceArgBuilder_;

      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable> getAdviceArgList() {
        if (adviceArgBuilder_ == null) {
          return java.util.Collections.unmodifiableList(adviceArg_);
        } else {
          return adviceArgBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public int getAdviceArgCount() {
        if (adviceArgBuilder_ == null) {
          return adviceArg_.size();
        } else {
          return adviceArgBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable getAdviceArg(int index) {
        if (adviceArgBuilder_ == null) {
          return adviceArg_.get(index);
        } else {
          return adviceArgBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder setAdviceArg(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable value) {
        if (adviceArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdviceArgIsMutable();
          adviceArg_.set(index, value);
          onChanged();
        } else {
          adviceArgBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder setAdviceArg(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder builderForValue) {
        if (adviceArgBuilder_ == null) {
          ensureAdviceArgIsMutable();
          adviceArg_.set(index, builderForValue.build());
          onChanged();
        } else {
          adviceArgBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder addAdviceArg(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable value) {
        if (adviceArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdviceArgIsMutable();
          adviceArg_.add(value);
          onChanged();
        } else {
          adviceArgBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder addAdviceArg(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable value) {
        if (adviceArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdviceArgIsMutable();
          adviceArg_.add(index, value);
          onChanged();
        } else {
          adviceArgBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder addAdviceArg(
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder builderForValue) {
        if (adviceArgBuilder_ == null) {
          ensureAdviceArgIsMutable();
          adviceArg_.add(builderForValue.build());
          onChanged();
        } else {
          adviceArgBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder addAdviceArg(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder builderForValue) {
        if (adviceArgBuilder_ == null) {
          ensureAdviceArgIsMutable();
          adviceArg_.add(index, builderForValue.build());
          onChanged();
        } else {
          adviceArgBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder addAllAdviceArg(
          java.lang.Iterable<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable> values) {
        if (adviceArgBuilder_ == null) {
          ensureAdviceArgIsMutable();
          super.addAll(values, adviceArg_);
          onChanged();
        } else {
          adviceArgBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder clearAdviceArg() {
        if (adviceArgBuilder_ == null) {
          adviceArg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          adviceArgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public Builder removeAdviceArg(int index) {
        if (adviceArgBuilder_ == null) {
          ensureAdviceArgIsMutable();
          adviceArg_.remove(index);
          onChanged();
        } else {
          adviceArgBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder getAdviceArgBuilder(
          int index) {
        return getAdviceArgFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder getAdviceArgOrBuilder(
          int index) {
        if (adviceArgBuilder_ == null) {
          return adviceArg_.get(index);  } else {
          return adviceArgBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public java.util.List<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder> 
           getAdviceArgOrBuilderList() {
        if (adviceArgBuilder_ != null) {
          return adviceArgBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(adviceArg_);
        }
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder addAdviceArgBuilder() {
        return getAdviceArgFieldBuilder().addBuilder(
            edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.getDefaultInstance());
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder addAdviceArgBuilder(
          int index) {
        return getAdviceArgFieldBuilder().addBuilder(
            index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.getDefaultInstance());
      }
      /**
       * <code>repeated .pivottracingspec.ExportedVariable adviceArg = 6;</code>
       *
       * <pre>
       * arguments to pass to the advice
       * </pre>
       */
      public java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder> 
           getAdviceArgBuilderList() {
        return getAdviceArgFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder> 
          getAdviceArgFieldBuilder() {
        if (adviceArgBuilder_ == null) {
          adviceArgBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariable.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.ExportedVariableOrBuilder>(
                  adviceArg_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          adviceArg_ = null;
        }
        return adviceArgBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pivottracingspec.MethodTracepointSpec)
    }

    static {
      defaultInstance = new MethodTracepointSpec(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pivottracingspec.MethodTracepointSpec)
  }

  public interface HardcodedTracepointSpecOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string id = 1;
    /**
     * <code>required string id = 1;</code>
     *
     * <pre>
     * id of the hardcoded tracepoint
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     *
     * <pre>
     * id of the hardcoded tracepoint
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     *
     * <pre>
     * id of the hardcoded tracepoint
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // repeated string export = 2;
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    java.util.List<java.lang.String>
    getExportList();
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    int getExportCount();
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    java.lang.String getExport(int index);
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    com.google.protobuf.ByteString
        getExportBytes(int index);
  }
  /**
   * Protobuf type {@code pivottracingspec.HardcodedTracepointSpec}
   *
   * <pre>
   * Matches a hardcoded tracepoint that already exists in the system 
   * </pre>
   */
  public static final class HardcodedTracepointSpec extends
      com.google.protobuf.GeneratedMessage
      implements HardcodedTracepointSpecOrBuilder {
    // Use HardcodedTracepointSpec.newBuilder() to construct.
    private HardcodedTracepointSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HardcodedTracepointSpec(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HardcodedTracepointSpec defaultInstance;
    public static HardcodedTracepointSpec getDefaultInstance() {
      return defaultInstance;
    }

    public HardcodedTracepointSpec getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HardcodedTracepointSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                export_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              export_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          export_ = new com.google.protobuf.UnmodifiableLazyStringList(export_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_HardcodedTracepointSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_HardcodedTracepointSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder.class);
    }

    public static com.google.protobuf.Parser<HardcodedTracepointSpec> PARSER =
        new com.google.protobuf.AbstractParser<HardcodedTracepointSpec>() {
      public HardcodedTracepointSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HardcodedTracepointSpec(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HardcodedTracepointSpec> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>required string id = 1;</code>
     *
     * <pre>
     * id of the hardcoded tracepoint
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string id = 1;</code>
     *
     * <pre>
     * id of the hardcoded tracepoint
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     *
     * <pre>
     * id of the hardcoded tracepoint
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string export = 2;
    public static final int EXPORT_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList export_;
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExportList() {
      return export_;
    }
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    public int getExportCount() {
      return export_.size();
    }
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    public java.lang.String getExport(int index) {
      return export_.get(index);
    }
    /**
     * <code>repeated string export = 2;</code>
     *
     * <pre>
     * exported variables to pass to the advice
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExportBytes(int index) {
      return export_.getByteString(index);
    }

    private void initFields() {
      id_ = "";
      export_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      for (int i = 0; i < export_.size(); i++) {
        output.writeBytes(2, export_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < export_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(export_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExportList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pivottracingspec.HardcodedTracepointSpec}
     *
     * <pre>
     * Matches a hardcoded tracepoint that already exists in the system 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_HardcodedTracepointSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_HardcodedTracepointSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.Builder.class);
      }

      // Construct using edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        export_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_HardcodedTracepointSpec_descriptor;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec getDefaultInstanceForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance();
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec build() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec buildPartial() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec result = new edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          export_ = new com.google.protobuf.UnmodifiableLazyStringList(
              export_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.export_ = export_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec) {
          return mergeFrom((edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec other) {
        if (other == edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (!other.export_.isEmpty()) {
          if (export_.isEmpty()) {
            export_ = other.export_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExportIsMutable();
            export_.addAll(other.export_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.pivottracing.agent.WeaveProtos.HardcodedTracepointSpec) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       *
       * <pre>
       * id of the hardcoded tracepoint
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       *
       * <pre>
       * id of the hardcoded tracepoint
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       *
       * <pre>
       * id of the hardcoded tracepoint
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       *
       * <pre>
       * id of the hardcoded tracepoint
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       *
       * <pre>
       * id of the hardcoded tracepoint
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       *
       * <pre>
       * id of the hardcoded tracepoint
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // repeated string export = 2;
      private com.google.protobuf.LazyStringList export_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExportIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          export_ = new com.google.protobuf.LazyStringArrayList(export_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExportList() {
        return java.util.Collections.unmodifiableList(export_);
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public int getExportCount() {
        return export_.size();
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public java.lang.String getExport(int index) {
        return export_.get(index);
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExportBytes(int index) {
        return export_.getByteString(index);
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public Builder setExport(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExportIsMutable();
        export_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public Builder addExport(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExportIsMutable();
        export_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public Builder addAllExport(
          java.lang.Iterable<java.lang.String> values) {
        ensureExportIsMutable();
        super.addAll(values, export_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public Builder clearExport() {
        export_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string export = 2;</code>
       *
       * <pre>
       * exported variables to pass to the advice
       * </pre>
       */
      public Builder addExportBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExportIsMutable();
        export_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pivottracingspec.HardcodedTracepointSpec)
    }

    static {
      defaultInstance = new HardcodedTracepointSpec(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pivottracingspec.HardcodedTracepointSpec)
  }

  public interface WeaveSpecOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes id = 1;
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * a unique ID for this weave spec
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * a unique ID for this weave spec
     * </pre>
     */
    com.google.protobuf.ByteString getId();

    // required .pivottracingspec.AdviceSpec advice = 2;
    /**
     * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
     *
     * <pre>
     * the advice to weave at the tracepoints
     * </pre>
     */
    boolean hasAdvice();
    /**
     * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
     *
     * <pre>
     * the advice to weave at the tracepoints
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec getAdvice();
    /**
     * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
     *
     * <pre>
     * the advice to weave at the tracepoints
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpecOrBuilder getAdviceOrBuilder();

    // repeated .pivottracingspec.TracepointSpec tracepoint = 3;
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec> 
        getTracepointList();
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec getTracepoint(int index);
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    int getTracepointCount();
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    java.util.List<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder> 
        getTracepointOrBuilderList();
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder getTracepointOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pivottracingspec.WeaveSpec}
   *
   * <pre>
   * Advice is woven at one or more tracepoints.  ID is used to later unweave or replace 
   * </pre>
   */
  public static final class WeaveSpec extends
      com.google.protobuf.GeneratedMessage
      implements WeaveSpecOrBuilder {
    // Use WeaveSpec.newBuilder() to construct.
    private WeaveSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WeaveSpec(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WeaveSpec defaultInstance;
    public static WeaveSpec getDefaultInstance() {
      return defaultInstance;
    }

    public WeaveSpec getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WeaveSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = advice_.toBuilder();
              }
              advice_ = input.readMessage(edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(advice_);
                advice_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tracepoint_ = new java.util.ArrayList<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec>();
                mutable_bitField0_ |= 0x00000004;
              }
              tracepoint_.add(input.readMessage(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tracepoint_ = java.util.Collections.unmodifiableList(tracepoint_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_WeaveSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_WeaveSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.Builder.class);
    }

    public static com.google.protobuf.Parser<WeaveSpec> PARSER =
        new com.google.protobuf.AbstractParser<WeaveSpec>() {
      public WeaveSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WeaveSpec(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WeaveSpec> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * a unique ID for this weave spec
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * a unique ID for this weave spec
     * </pre>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    // required .pivottracingspec.AdviceSpec advice = 2;
    public static final int ADVICE_FIELD_NUMBER = 2;
    private edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec advice_;
    /**
     * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
     *
     * <pre>
     * the advice to weave at the tracepoints
     * </pre>
     */
    public boolean hasAdvice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
     *
     * <pre>
     * the advice to weave at the tracepoints
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec getAdvice() {
      return advice_;
    }
    /**
     * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
     *
     * <pre>
     * the advice to weave at the tracepoints
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpecOrBuilder getAdviceOrBuilder() {
      return advice_;
    }

    // repeated .pivottracingspec.TracepointSpec tracepoint = 3;
    public static final int TRACEPOINT_FIELD_NUMBER = 3;
    private java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec> tracepoint_;
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    public java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec> getTracepointList() {
      return tracepoint_;
    }
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    public java.util.List<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder> 
        getTracepointOrBuilderList() {
      return tracepoint_;
    }
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    public int getTracepointCount() {
      return tracepoint_.size();
    }
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec getTracepoint(int index) {
      return tracepoint_.get(index);
    }
    /**
     * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
     *
     * <pre>
     * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
     * </pre>
     */
    public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder getTracepointOrBuilder(
        int index) {
      return tracepoint_.get(index);
    }

    private void initFields() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      advice_ = edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.getDefaultInstance();
      tracepoint_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdvice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAdvice().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTracepointCount(); i++) {
        if (!getTracepoint(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, advice_);
      }
      for (int i = 0; i < tracepoint_.size(); i++) {
        output.writeMessage(3, tracepoint_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, advice_);
      }
      for (int i = 0; i < tracepoint_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tracepoint_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pivottracingspec.WeaveSpec}
     *
     * <pre>
     * Advice is woven at one or more tracepoints.  ID is used to later unweave or replace 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_WeaveSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_WeaveSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.class, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.Builder.class);
      }

      // Construct using edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAdviceFieldBuilder();
          getTracepointFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (adviceBuilder_ == null) {
          advice_ = edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.getDefaultInstance();
        } else {
          adviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tracepointBuilder_ == null) {
          tracepoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tracepointBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.internal_static_pivottracingspec_WeaveSpec_descriptor;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec getDefaultInstanceForType() {
        return edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.getDefaultInstance();
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec build() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec buildPartial() {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec result = new edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (adviceBuilder_ == null) {
          result.advice_ = advice_;
        } else {
          result.advice_ = adviceBuilder_.build();
        }
        if (tracepointBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            tracepoint_ = java.util.Collections.unmodifiableList(tracepoint_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tracepoint_ = tracepoint_;
        } else {
          result.tracepoint_ = tracepointBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec) {
          return mergeFrom((edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec other) {
        if (other == edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasAdvice()) {
          mergeAdvice(other.getAdvice());
        }
        if (tracepointBuilder_ == null) {
          if (!other.tracepoint_.isEmpty()) {
            if (tracepoint_.isEmpty()) {
              tracepoint_ = other.tracepoint_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTracepointIsMutable();
              tracepoint_.addAll(other.tracepoint_);
            }
            onChanged();
          }
        } else {
          if (!other.tracepoint_.isEmpty()) {
            if (tracepointBuilder_.isEmpty()) {
              tracepointBuilder_.dispose();
              tracepointBuilder_ = null;
              tracepoint_ = other.tracepoint_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tracepointBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTracepointFieldBuilder() : null;
            } else {
              tracepointBuilder_.addAllMessages(other.tracepoint_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasAdvice()) {
          
          return false;
        }
        if (!getAdvice().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getTracepointCount(); i++) {
          if (!getTracepoint(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.brown.cs.systems.pivottracing.agent.WeaveProtos.WeaveSpec) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes id = 1;
      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * a unique ID for this weave spec
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * a unique ID for this weave spec
       * </pre>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * a unique ID for this weave spec
       * </pre>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * a unique ID for this weave spec
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      // required .pivottracingspec.AdviceSpec advice = 2;
      private edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec advice_ = edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec, edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.Builder, edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpecOrBuilder> adviceBuilder_;
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public boolean hasAdvice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec getAdvice() {
        if (adviceBuilder_ == null) {
          return advice_;
        } else {
          return adviceBuilder_.getMessage();
        }
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public Builder setAdvice(edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec value) {
        if (adviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          advice_ = value;
          onChanged();
        } else {
          adviceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public Builder setAdvice(
          edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.Builder builderForValue) {
        if (adviceBuilder_ == null) {
          advice_ = builderForValue.build();
          onChanged();
        } else {
          adviceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public Builder mergeAdvice(edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec value) {
        if (adviceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              advice_ != edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.getDefaultInstance()) {
            advice_ =
              edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.newBuilder(advice_).mergeFrom(value).buildPartial();
          } else {
            advice_ = value;
          }
          onChanged();
        } else {
          adviceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public Builder clearAdvice() {
        if (adviceBuilder_ == null) {
          advice_ = edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.getDefaultInstance();
          onChanged();
        } else {
          adviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.Builder getAdviceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAdviceFieldBuilder().getBuilder();
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpecOrBuilder getAdviceOrBuilder() {
        if (adviceBuilder_ != null) {
          return adviceBuilder_.getMessageOrBuilder();
        } else {
          return advice_;
        }
      }
      /**
       * <code>required .pivottracingspec.AdviceSpec advice = 2;</code>
       *
       * <pre>
       * the advice to weave at the tracepoints
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec, edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.Builder, edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpecOrBuilder> 
          getAdviceFieldBuilder() {
        if (adviceBuilder_ == null) {
          adviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec, edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpec.Builder, edu.brown.cs.systems.pivottracing.advice.AdviceProtos.AdviceSpecOrBuilder>(
                  advice_,
                  getParentForChildren(),
                  isClean());
          advice_ = null;
        }
        return adviceBuilder_;
      }

      // repeated .pivottracingspec.TracepointSpec tracepoint = 3;
      private java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec> tracepoint_ =
        java.util.Collections.emptyList();
      private void ensureTracepointIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tracepoint_ = new java.util.ArrayList<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec>(tracepoint_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder> tracepointBuilder_;

      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec> getTracepointList() {
        if (tracepointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tracepoint_);
        } else {
          return tracepointBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public int getTracepointCount() {
        if (tracepointBuilder_ == null) {
          return tracepoint_.size();
        } else {
          return tracepointBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec getTracepoint(int index) {
        if (tracepointBuilder_ == null) {
          return tracepoint_.get(index);
        } else {
          return tracepointBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder setTracepoint(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec value) {
        if (tracepointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTracepointIsMutable();
          tracepoint_.set(index, value);
          onChanged();
        } else {
          tracepointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder setTracepoint(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder builderForValue) {
        if (tracepointBuilder_ == null) {
          ensureTracepointIsMutable();
          tracepoint_.set(index, builderForValue.build());
          onChanged();
        } else {
          tracepointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder addTracepoint(edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec value) {
        if (tracepointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTracepointIsMutable();
          tracepoint_.add(value);
          onChanged();
        } else {
          tracepointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder addTracepoint(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec value) {
        if (tracepointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTracepointIsMutable();
          tracepoint_.add(index, value);
          onChanged();
        } else {
          tracepointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder addTracepoint(
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder builderForValue) {
        if (tracepointBuilder_ == null) {
          ensureTracepointIsMutable();
          tracepoint_.add(builderForValue.build());
          onChanged();
        } else {
          tracepointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder addTracepoint(
          int index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder builderForValue) {
        if (tracepointBuilder_ == null) {
          ensureTracepointIsMutable();
          tracepoint_.add(index, builderForValue.build());
          onChanged();
        } else {
          tracepointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder addAllTracepoint(
          java.lang.Iterable<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec> values) {
        if (tracepointBuilder_ == null) {
          ensureTracepointIsMutable();
          super.addAll(values, tracepoint_);
          onChanged();
        } else {
          tracepointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder clearTracepoint() {
        if (tracepointBuilder_ == null) {
          tracepoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tracepointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public Builder removeTracepoint(int index) {
        if (tracepointBuilder_ == null) {
          ensureTracepointIsMutable();
          tracepoint_.remove(index);
          onChanged();
        } else {
          tracepointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder getTracepointBuilder(
          int index) {
        return getTracepointFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder getTracepointOrBuilder(
          int index) {
        if (tracepointBuilder_ == null) {
          return tracepoint_.get(index);  } else {
          return tracepointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public java.util.List<? extends edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder> 
           getTracepointOrBuilderList() {
        if (tracepointBuilder_ != null) {
          return tracepointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tracepoint_);
        }
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder addTracepointBuilder() {
        return getTracepointFieldBuilder().addBuilder(
            edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.getDefaultInstance());
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder addTracepointBuilder(
          int index) {
        return getTracepointFieldBuilder().addBuilder(
            index, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.getDefaultInstance());
      }
      /**
       * <code>repeated .pivottracingspec.TracepointSpec tracepoint = 3;</code>
       *
       * <pre>
       * the tracepoint(s) to weave the advice at.  args from tracepoint must match advice observed args
       * </pre>
       */
      public java.util.List<edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder> 
           getTracepointBuilderList() {
        return getTracepointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder> 
          getTracepointFieldBuilder() {
        if (tracepointBuilder_ == null) {
          tracepointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpec.Builder, edu.brown.cs.systems.pivottracing.agent.WeaveProtos.TracepointSpecOrBuilder>(
                  tracepoint_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          tracepoint_ = null;
        }
        return tracepointBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pivottracingspec.WeaveSpec)
    }

    static {
      defaultInstance = new WeaveSpec(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pivottracingspec.WeaveSpec)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pivottracingspec_TracepointSpec_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pivottracingspec_TracepointSpec_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pivottracingspec_MultiExportedVariable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pivottracingspec_MultiExportedVariable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pivottracingspec_ExportedVariable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pivottracingspec_ExportedVariable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pivottracingspec_MethodTracepointSpec_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pivottracingspec_MethodTracepointSpec_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pivottracingspec_HardcodedTracepointSpec_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pivottracingspec_HardcodedTracepointSpec_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pivottracingspec_WeaveSpec_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pivottracingspec_WeaveSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035src/main/protobuf/Weave.proto\022\020pivottr" +
      "acingspec\032\036src/main/protobuf/Advice.prot" +
      "o\"\254\001\n\016TracepointSpec\022\020\n\010procName\030\001 \003(\t\022@" +
      "\n\020methodTracepoint\030\002 \001(\0132&.pivottracings" +
      "pec.MethodTracepointSpec\022F\n\023hardcodedTra" +
      "cepoint\030\003 \001(\0132).pivottracingspec.Hardcod" +
      "edTracepointSpec\"K\n\025MultiExportedVariabl" +
      "e\022\014\n\004type\030\001 \002(\t\022\017\n\007literal\030\002 \002(\t\022\023\n\013post" +
      "Process\030\003 \001(\t\"[\n\020ExportedVariable\022\017\n\007lit" +
      "eral\030\001 \001(\t\0226\n\005multi\030\002 \001(\0132\'.pivottracing",
      "spec.MultiExportedVariable\"\232\002\n\024MethodTra" +
      "cepointSpec\022\021\n\tclassName\030\001 \002(\t\022\022\n\nmethod" +
      "Name\030\002 \002(\t\022\022\n\nparamClass\030\003 \003(\t\022B\n\005where\030" +
      "\004 \001(\0162,.pivottracingspec.MethodTracepoin" +
      "tSpec.Where:\005ENTRY\022\022\n\nlineNumber\030\005 \001(\005\0225" +
      "\n\tadviceArg\030\006 \003(\0132\".pivottracingspec.Exp" +
      "ortedVariable\"8\n\005Where\022\t\n\005ENTRY\020\001\022\n\n\006RET" +
      "URN\020\002\022\013\n\007FINALLY\020\003\022\013\n\007LINENUM\020\004\"5\n\027Hardc" +
      "odedTracepointSpec\022\n\n\002id\030\001 \002(\t\022\016\n\006export" +
      "\030\002 \003(\t\"{\n\tWeaveSpec\022\n\n\002id\030\001 \002(\014\022,\n\006advic",
      "e\030\002 \002(\0132\034.pivottracingspec.AdviceSpec\0224\n" +
      "\ntracepoint\030\003 \003(\0132 .pivottracingspec.Tra" +
      "cepointSpecB6\n\'edu.brown.cs.systems.pivo" +
      "ttracing.agentB\013WeaveProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_pivottracingspec_TracepointSpec_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_pivottracingspec_TracepointSpec_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pivottracingspec_TracepointSpec_descriptor,
              new java.lang.String[] { "ProcName", "MethodTracepoint", "HardcodedTracepoint", });
          internal_static_pivottracingspec_MultiExportedVariable_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_pivottracingspec_MultiExportedVariable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pivottracingspec_MultiExportedVariable_descriptor,
              new java.lang.String[] { "Type", "Literal", "PostProcess", });
          internal_static_pivottracingspec_ExportedVariable_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_pivottracingspec_ExportedVariable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pivottracingspec_ExportedVariable_descriptor,
              new java.lang.String[] { "Literal", "Multi", });
          internal_static_pivottracingspec_MethodTracepointSpec_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_pivottracingspec_MethodTracepointSpec_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pivottracingspec_MethodTracepointSpec_descriptor,
              new java.lang.String[] { "ClassName", "MethodName", "ParamClass", "Where", "LineNumber", "AdviceArg", });
          internal_static_pivottracingspec_HardcodedTracepointSpec_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_pivottracingspec_HardcodedTracepointSpec_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pivottracingspec_HardcodedTracepointSpec_descriptor,
              new java.lang.String[] { "Id", "Export", });
          internal_static_pivottracingspec_WeaveSpec_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_pivottracingspec_WeaveSpec_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pivottracingspec_WeaveSpec_descriptor,
              new java.lang.String[] { "Id", "Advice", "Tracepoint", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          edu.brown.cs.systems.pivottracing.advice.AdviceProtos.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
